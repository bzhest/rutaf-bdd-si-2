@api @public_api @postPublicSelfServiceThirdPartyBulkUpload
Feature: Bulk Upload to Third Party



  Background:
#    * def baseTestUrl =        'https://api.qa-sprint2.supplierintegrity.com'
    * def xTenantCode =        tenant
    * def invalidXTenantCode = 'xxx'
    * def eTag =               ''
    * configure retry =        { count: 40, interval: 3000 }



    * def getAccessToken = isSwaggerDirect==true? {}   : karate.callonce( "../callonce/getAccessToken.feature" )
    * def accessToken =    isSwaggerDirect?       ''   : $getAccessToken.response.access_token
    * def accessTokenExp = isSwaggerDirect?       ''   : $getAccessToken.response.expires_in

    And print '\n'
    * print '================================'
    * print '******** baseTestUrl      = '+ baseTestUrl
    * print '******** accessToken      = '+ accessToken
    * print '******** accessTokenExp   = '+ accessTokenExp
    * print '================================'
    And print '\n'



    * def fnGetNowMs = function() { return java.lang.System.currentTimeMillis(); }

    * def fnGetISODate =
      """
        function( givenEpochTimeMs ) {
          var givenDate = new Date( givenEpochTimeMs );
          return givenDate.toISOString();
        }
      """

    * def fnGetEpochTimeMs =
      """
        function( givenISODate ) {
          var givenDate = new Date( givenISODate );
          return givenDate.getTime();
        }
      """

    * def fnGetISODateStartOfDay =
      """
        function( givenEpochTimeMs ) {
          var givenDate = new Date( givenEpochTimeMs );
          var givenDateStart = new Date( givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate(), 0, 0, 0, 0 );
          return givenDateStart.toISOString();
        }
      """

    * def fnGetISODateEndOfDay =
      """
        function( givenEpochTimeMs ) {
          var givenDate = new Date( givenEpochTimeMs );
          var givenDateEnd = new Date( givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate(), 23, 59, 59, 999 );
          return givenDateEnd.toISOString();
        }
      """

    * def fnCreateDateAsUTC =
      """
        function( givenEpochTimeMs ) {
          var givenDate = new Date( givenEpochTimeMs );
          var utcDate = new Date( Date.UTC(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate(), givenDate.getHours(), givenDate.getMinutes(), givenDate.getSeconds(), givenDate.getMilliseconds()) );
          return utcDate.toISOString();
        }
      """

    * def fnConvertDateToUTC =
      """
        function( givenEpochTimeMs ) {
          var givenDate = new Date( givenEpochTimeMs );
          var utcDate = new Date( givenDate.getUTCFullYear(), givenDate.getUTCMonth(), givenDate.getUTCDate(), givenDate.getUTCHours(), givenDate.getUTCMinutes(), givenDate.getUTCSeconds(), givenDate.getUTCMilliseconds() );
          return utcDate.toISOString();
        }
      """

#    * def fnConvertToISODate4 =
#      """
#        function( givenDateMsOrISODate ) {
#          var givenDate = new Date( givenDateMsOrISODate );
#          return givenDate.toISOString().substring( 0, 19 ) +'+0000';
#        }
#      """



    * def fnToISOStringLocTzo =
      """
        function( givenDateMsOrISODateTzo ) {
           var date   = new Date( givenDateMsOrISODateTzo );
           var tzoMin = -date.getTimezoneOffset();
           var s      = (tzoMin >= 0) ? '+' : '-';
           var padP   = function( n, p ) {
               var s0 = '';
               if ( n < Math.pow(10,p) ) {
                   for ( var i=0; i<p; i++ ) {
                       if ( n < Math.pow(10,p-i-1) ) {
                           s0 += '0';
                       }
                       else {
                           break;
                       }
                   }
               }
               s0 += (n>0? n.toString() : '');
               return s0;
           };
           return          date.getFullYear()
               +'-' + padP( date.getMonth() + 1,    2 )
               +'-' + padP( date.getDate(),         2 )
               +'T' + padP( date.getHours(),        2 )
               +':' + padP( date.getMinutes(),      2 )
               +':' + padP( date.getSeconds(),      2 )
               +'.' + padP( date.getMilliseconds(), 3 )
               + s  + padP( tzoMin / 60 ,           2 )
               +''  + padP( tzoMin % 60 ,           2 );
        }
      """



    * def fnToISOStringUTCTzo =
      """
        function( givenDateMsOrISODateTzo ) {
           var date   = new Date( givenDateMsOrISODateTzo );
           var tzoMin = 0; // -date.getTimezoneOffset();
           var s      = (tzoMin >= 0) ? '+' : '-';
           var padP   = function( n, p ) {
               var s0 = '';
               if ( n < Math.pow(10,p) ) {
                   for ( var i=0; i<p; i++ ) {
                       if ( n < Math.pow(10,p-i-1) ) {
                           s0 += '0';
                       }
                       else {
                           break;
                       }
                   }
               }
               s0 += (n>0? n.toString() : '');
               return s0;
           };
           return          date.getUTCFullYear()
               +'-' + padP( date.getUTCMonth() + 1,    2 )
               +'-' + padP( date.getUTCDate(),         2 )
               +'T' + padP( date.getUTCHours(),        2 )
               +':' + padP( date.getUTCMinutes(),      2 )
               +':' + padP( date.getUTCSeconds(),      2 )
               +'.' + padP( date.getUTCMilliseconds(), 3 )
               + s  + padP( tzoMin / 60 ,              2 )
               +''  + padP( tzoMin % 60 ,              2 );
        }
      """



    * def fnConvertISODateTzoToGivenTzo =
      """
        function( givenMsOrISODateTzo, givenTzo ) {
           var givenDate = new Date( givenMsOrISODateTzo );
           var tzoMin    = (givenTzo.substring(0,1) === '+' ? 1 : -1) * ( parseInt(givenTzo.substring(1,3))*60 + parseInt(givenTzo.substring(3,5)) );

           var convDate  = new Date( givenDate.getTime() + tzoMin*60000 );
           return convDate.toISOString().substring( 0, 23 ) + givenTzo;
        }
      """



    * def fnAbbrevISODateTzo =
      """
        function( givenISODateTzo ) {
          var resultISODateTzo = null;
          if ( givenISODateTzo.lastIndexOf('.') > -1 ) {
            resultISODateTzo = givenISODateTzo.substring( 0, givenISODateTzo.lastIndexOf('.') )
                              + ( givenISODateTzo.substring( givenISODateTzo.lastIndexOf('.')+4 ) === 'Z' ?
                                      "+0000"
                                    : givenISODateTzo.substring( givenISODateTzo.lastIndexOf('.')+4 )
                                );
          }
          else {
            resultISODateTzo = givenISODateTzo;
          }
          return resultISODateTzo;
        }
      """



    * def fnGetTimezoneOffset =
      """
        function( givenISODateString ) {
          return givenISODateString.substring( givenISODateString.length-1, givenISODateString.length ) === 'Z' ?
                     new Date( givenISODateString ).getTimezoneOffset()
                   : givenISODateString.lastIndexOf('+') > -1 ?
                         givenISODateString.substring( givenISODateString.lastIndexOf('+') )
                       : givenISODateString.lastIndexOf('-') > -1 ?
                             givenISODateString.substring( givenISODateString.lastIndexOf('-') )
                           : '?';
        }
      """



    * def pauseExecution = function( millis ) { java.lang.Thread.sleep(millis); }




    * def nowMs =             call fnGetNowMs
    * def nowISODate =        call fnGetISODate           nowMs
    * def nowEpochTimeMs =    call fnGetEpochTimeMs       nowISODate

    * def nowISODateLocTzo =  call fnToISOStringLocTzo    nowMs
    * def nowISODateLTzoMs =  call fnGetEpochTimeMs       nowISODateLocTzo
    * def nowISODateLTzoMin = call fnGetTimezoneOffset    nowISODateLocTzo

    * def nowISODateUTCTzo =  call fnToISOStringUTCTzo    nowMs
    * def nowISODateUTCTzo8 = call fnToISOStringUTCTzo    nowISODateLocTzo
    * def nowISODateUTzoMs =  call fnGetEpochTimeMs       nowISODateUTCTzo
    * def nowISODateUTzoMin = call fnGetTimezoneOffset    nowISODateUTCTzo

    * def now000000ISODate =  call fnGetISODateStartOfDay nowMs
    * def now235959ISODate =  call fnGetISODateEndOfDay   nowMs

    * def nowStartISODate4 =  fnAbbrevISODateTzo( fnConvertISODateTzoToGivenTzo( now000000ISODate, "+0800" ) )
    * def nowEndISODate4 =    fnAbbrevISODateTzo( fnConvertISODateTzoToGivenTzo( now235959ISODate, "+0800" ) )

    * def nowISODateAsUTC =   call fnCreateDateAsUTC      nowMs
    * def nowISODateToUTC =   call fnConvertDateToUTC     nowMs

    And match nowISODate ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'



    * def writeToFile =
      """
        function( fqFilename, text ) {
            var TextFileWriter = Java.type( 'com.refinitiv.asts.test.utils.TextFileWriter' );
            var tfw = new TextFileWriter();
            tfw.writeToFile( fqFilename, text );
        }
      """



    * def archiveToZipFile =
      """
        function( fqZipArchiveFilename, fqZipEntryFilename ) {
            var ZipFileArchiver = Java.type( 'com.refinitiv.asts.test.utils.ZipFileArchiver' );
            var zfa = new ZipFileArchiver();
            return zfa.archiveToZipFile( fqZipArchiveFilename, fqZipEntryFilename );
        }
      """



    * def addOrReplaceEntry =
      """
        function( fqZipArchiveFilename, fqZipEntryFilename ) {
            var ZipFileArchiver = Java.type( 'com.refinitiv.asts.test.utils.ZipFileArchiver' );
            var zfa = new ZipFileArchiver();
            return zfa.addOrReplaceEntry( fqZipArchiveFilename, fqZipEntryFilename );
        }
      """



#    * def iterateOverAndCollectBySpecifiedValue =
#      """
#        function( iteratingArrayElem, collectingArray, targetValue ) {
#            if ( iteratingArrayElem.status == targetValue ) {
#                karate.append( collectingArray, iteratingArrayElem.filename );
#            }
#        }
#      """



    * def createThirdPartyIdsArrFn =
      """
        function( thirdPartyIds ) {

          var thirdPartyIdsArr = [];
          for (var i=0; i<thirdPartyIds.length; i++ ) {
            thirdPartyIdsArr.push( { 'thirdPartyId': thirdPartyIds[i] } );
          }
          return thirdPartyIdsArr;
        }
      """



    * configure logPrettyResponse = true



#  Scenario: 1) C37786776 Third-party - FULLUPDATE
#               - Successfully update a third-party (single line)
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 1) SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987           |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada     |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows2 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows2 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 2) C37786744 Third-party - FULLUPDATE
#               - Verify error for Third-party ID that does not exist
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 2) NON-EXISTENT THIRDPARTY ID'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
#    * def csvRows01 = "FULLUPDATE |xxxxxxxxxxxxxx|                |1       |FULUPD-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1-xxx123|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 3) C37786745 Third-party - FULLUPDATE
#               - Verify error for Reference Number that already exists
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 3) REFNO EXISTS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def nowMs = call fnGetNowMs
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#    * def nowMs2 = call fnGetNowMs
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs2)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId2 = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs2             = '+ nowMs2
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId2      = '+ thirdPartyId2
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult2 = response.data.id
#    And match thirdPartyId2 == thirdPartyIdResult2
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId2       = '+ thirdPartyId2
#    And print '******** thirdPartyIdResult2 = '+ thirdPartyIdResult2
#    And print '******** ETag                = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult2 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyId2       = '+ thirdPartyId2
#    And print '******** thirdPartyIds       = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+   nowMs2   +"|1       |FULUPD"+nowMs2+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** nowMs2         = '+ nowMs2
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult2 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyId2       = '+ thirdPartyId2
#    And print '******** thirdPartyIds       = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 4) C37786746 Third-party - FULLUPDATE
#               - Verify error for Reference Number that does not exist
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 4) NON-EXISTENT REFNO'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows1 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows2 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows1 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows2 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows2 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows2 = "FULLUPDATE|xxxxxx123456||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
#    * def csvRows2 = "FULLUPDATE |              |refNo-xxxxxxxxxx|1       |FULUPD-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Canada |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
#    * def csvRowsT = csvRows1 + csvRows2
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 4) NON-EXISTENT REFERENCE NO.'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 4) NON-EXISTENT REFERENCE NO.'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 5) C37786760 Third-party - FULLUPDATE
#               - Verify error for Invalid Date
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 5) INVALID DATE'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID    |Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division   |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Error: Invalid date - Date of Incorporation
#    * def csvRows01 = "FULLUPDATE |"+ thirdPartyId +"|                |1       |FULUPD-"+nowMs+"|            |        |                 |             |                 |incDate-xxxxxxxx     |       |                |           |si_admin@yopmail.com|MyDivision|Default        |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Canada |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 5) INVALID DATE'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID    |Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division   |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Error: Invalid date - Liquidation Date
#    * def csvRows01 = "FULLUPDATE |"+ thirdPartyId +"|                |1       |FULUPD-"+nowMs+"|            |        |                 |             |                 |                     |       |liqDate-xxxxxxxx|           |si_admin@yopmail.com|MyDivision|Default        |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Canada |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 6) C37786778 Third-party - FULLUPDATE
#               - Update Other Names
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 6) OTHER NAMES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name    |Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |              |                   |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: Other Name
#    * def csvRows01 = "FULLUPDATE |"+ thirdPartyId       +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Canada     |            |       |   |             |           |MyOther OldName01   |MyOther Name01|Local Language Name|Brazil            |                  |                   \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name02|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name03|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name04|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name05|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name06|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name07|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name08|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name09|Doing Business As  |Brazil            |                  |                   \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |       |   |             |           |                    |MyOther Name10|Doing Business As  |Brazil            |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 7) C37786777 Third-party - FULLUPDATE
#               - Update Bank Details
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 7) BANK DETAILS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: Bank Details
#    * def csvRows01 = "FULLUPDATE |"+ thirdPartyId       +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |MayBank01|111 Main Ave.    |1234567890 |New Jersey|Branch 01 |Canada      |            |              |    |      |               |Canada     |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank02|222 Main Ave.    |2345678901 |New Manila|Branch 02 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank03|333 Main Ave.    |3456789012 |New Oslo  |Branch 03 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank04|444 Main Ave.    |4567890123 |New York  |Branch 04 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank05|555 Main Ave.    |5678901234 |New Tokyo |Branch 05 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank06|666 Main Ave.    |6789012345 |New Osaka |Branch 06 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank07|777 Main Ave.    |7890123456 |New Berlin|Branch 07 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank08|888 Main Ave.    |8901234567 |New Milan |Branch 08 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank09|999 Main Ave.    |9012345678 |New Paris |Branch 09 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MayBank10|000 Main Ave.    |0123456789 |New Delhi |Branch 10 |Canada      |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 8) C37786784 Third-party - FULLUPDATE
#               - Update Description
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 8) DESCRIPTION'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows0 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows1 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows0 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows1 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: Update Description
#    * def csvRows1 = "FULLUPDATE |"+ thirdPartyId       +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |             |     |       |              |Canada     |            |       |   |             |This is OK.|                    |          |               |                  |                  |                   \n"
#
## Success: reference no.
##   * def csvRows1 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows1 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows1 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows1 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows0 + csvRows1
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 9) C37786783 Third-party - FULLUPDATE
#               - Update Address section
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 9) ADDRESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: Update Address
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                |           |          |            |            |1 Main Ave.|Rizal         |Bay  |Asia |90210          |Philippines |            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 10) C37786775 Third-party - FULLUPDATE
#                - Verify error for Maximum number of Fax exceeded
#
## ============================================================================================================
## Verify success using 5 fax numbers =========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 10) MAX FAX COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Faxes|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: 5 Faxes
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |Philippines |            |       |111|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |222|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |333|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |444|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |555|             |           |                    |          |               |                  |                  |                     \n"
##   * def csvRows02 = "|||1|||||||||||||||||||||||||||||||||||456||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ============================================================================================================
## Verify error using 6 fax numbers ===========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 10) EXCEED MAX FAX COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Faxes|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |     |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: 6 Faxes
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |Philippines |            |       |111|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |222|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |333|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |444|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |555|             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                |           |          |            |            |           |              |     |      |              |            |            |       |666|             |           |                    |          |               |                  |                  |                     \n"
##   * def csvRows02 = "|||1|||||||||||||||||||||||||||||||||||456||||||||"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 11) C37786772 Third-party - FULLUPDATE
#                - Verify error for Maximum number of Bank Details exceeded
#
## ============================================================================================================
## Verify SUCCESS using 10 Bank Details========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 11) MAX BANK DETAILS COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: 10 Bank Details
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |MyBank_01|111 Main Ave.    |1111111111 |SJ_City_01|Branch_01  |Philippines |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_02|222 Main Ave.    |2222222222 |SJ_City_02|Branch_02  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_03|333 Main Ave.    |3333333333 |SJ_City_03|Branch_03  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_04|444 Main Ave.    |4444444444 |SJ_City_04|Branch_04  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_05|555 Main Ave.    |5555555555 |SJ_City_05|Branch_05  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_06|666 Main Ave.    |6666666666 |SJ_City_06|Branch_06  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_07|777 Main Ave.    |7777777777 |SJ_City_07|Branch_07  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_08|888 Main Ave.    |8888888888 |SJ_City_08|Branch_08  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_09|999 Main Ave.    |9999999999 |SJ_City_09|Branch_09  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_10|000 Main Ave.    |0000000000 |SJ_City_10|Branch_10  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows1 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows1 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ============================================================================================================
## Verify ERROR using 11 Bank Details==========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 11) EXCEED MAX BANK DETAILS COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: 11 Bank Details
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |MyBank_01|111 Main Ave.    |1111111111 |SJ_City_01|Branch_01  |Philippines |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_02|222 Main Ave.    |2222222222 |SJ_City_02|Branch_02  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_03|333 Main Ave.    |3333333333 |SJ_City_03|Branch_03  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_04|444 Main Ave.    |4444444444 |SJ_City_04|Branch_04  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_05|555 Main Ave.    |5555555555 |SJ_City_05|Branch_05  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_06|666 Main Ave.    |6666666666 |SJ_City_06|Branch_06  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_07|777 Main Ave.    |7777777777 |SJ_City_07|Branch_07  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_08|888 Main Ave.    |8888888888 |SJ_City_08|Branch_08  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_09|999 Main Ave.    |9999999999 |SJ_City_09|Branch_09  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_10|000 Main Ave.    |0000000000 |SJ_City_10|Branch_10  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows11 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |MyBank_11|111 Main Ave.    |1111111111 |SJ_City_11|Branch_11  |Philippines |            |              |    |      |               |           |            |       |   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows1 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows1 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10 + csvRows11
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 12) C37786773 Third-party - FULLUPDATE
#                - Verify error for Maximum number of Website exceeded
#
## ============================================================================================================
## Verify SUCCESS using 5 Websites ============================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 12) MAX WEBSITES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: 5 Websites
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|            |www.abc1.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc2.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc3.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc4.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc5.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ============================================================================================================
## Verify ERROR using 6 Websites ==============================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 12) EXCEED MAX WEBSITES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: 6 Websites
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|            |www.abc1.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc2.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc3.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc4.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc5.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |www.abc6.ph|   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 13) C37786774 Third-party - FULLUPDATE
#                - Verify error for Maximum number of Phone Number exceeded
#
## ============================================================================================================
## Verify SUCCESS using 5 Phone Numbers =======================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 13) MAX PHONES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: 5 Phone Numbers
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|111111111111|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |222222222222|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |333333333333|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |444444444444|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |555555555555|           |   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ============================================================================================================
## Verify ERROR using 6 Phone Numbers =========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 13) EXCEED MAX PHONES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: 6 Phone Numbers
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|111111111111|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |222222222222|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |333333333333|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |444444444444|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |555555555555|           |   |             |           |                    |          |               |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |666666666666|           |   |             |           |                    |          |               |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 14) C37786771 Third-party - FULLUPDATE
#                - Verify error for Maximum number of Other Names exceeded
#
## ============================================================================================================
## Verify SUCCESS using 10 Other Names ========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 14) MAX OTHER NAMES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: 10 Other Names
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |MyFirm_01 |Other Name     |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_02 |Other Name     |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_03 |Other Name     |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_04 |Other Name     |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_05 |Other Name     |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_06 |Other Name     |                  |                  |                     \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_07 |Other Name     |                  |                  |                     \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_08 |Other Name     |                  |                  |                     \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_09 |Other Name     |                  |                  |                     \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_10 |Other Name     |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ============================================================================================================
## Verify ERROR using 11 Other Names ==========================================================================
## ============================================================================================================
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 14) MAX OTHER NAMES COUNT'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                     "
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows02 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: 11 Other Names
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |MyFirm_01 |Other Name     |                  |                  |                     \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_02 |Other Name     |                  |                  |                     \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_03 |Other Name     |                  |                  |                     \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_04 |Other Name     |                  |                  |                     \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_05 |Other Name     |                  |                  |                     \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_06 |Other Name     |                  |                  |                     \n"
#    * def csvRows07 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_07 |Other Name     |                  |                  |                     \n"
#    * def csvRows08 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_08 |Other Name     |                  |                  |                     \n"
#    * def csvRows09 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_09 |Other Name     |                  |                  |                     \n"
#    * def csvRows10 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_10 |Other Name     |                  |                  |                     \n"
#    * def csvRows11 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |          |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |MyFirm_11 |Other Name     |                  |                  |                     \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10 + csvRows11
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 15) C37786780 Third-party - FULLUPDATE
#                - Update General Information section
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 15) GEN INFO'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987           |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 16) C37786782 Third-party - FULLUPDATE
#                - Update Other Information section
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 16) OTHER INFO'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: Other Information
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |Field1                     |FULLUPDATE - TEXT - "+ nowMs +"   \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Number field               |"+ nowMs +"                       \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Date custom field          |"+ nowMs +"                       \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Commodity type singleselect|3PL Services      - "+ nowMs +"   \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Risk tier singleselect     |Low Risk          - "+ nowMs +"   \n"
#    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |TESTING                    |Americas-"+nowMs+", Asia-"+nowMs+"\n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 17) C37786779 Third-party - FULLUPDATE
#                - Update Contact Information section
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 17) CONTACT INFO'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: Contact Information
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|111111111111|www.test1.com|111|abc@test1.com|           |                    |          |               |                  |                  |                   \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |222222222222|www.test2.com|222|abc@test2.com|           |                    |          |               |                  |                  |                   \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |333333333333|www.test3.com|333|abc@test3.com|           |                    |          |               |                  |                  |                   \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |444444444444|www.test4.com|444|abc@test4.com|           |                    |          |               |                  |                  |                   \n"
#    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |555555555555|www.test5.com|555|abc@test5.com|           |                    |          |               |                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 18) C37786781 Third-party - FULLUPDATE
#                - Update Third-party Segmentation section
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 18) THIRDPARTY SEGMENTATION'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: Third-party Segmentation
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |       |   |             |           |                    |          |               |                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 19) C37786785 Third-party - FULLUPDATE
#                - Update 10 third-party
#
#
##
## CREATE third-party 1
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 2
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId2 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId2     = '+ thirdPartyId2
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId2 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId2      = '+ thirdPartyId2
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 3
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId3 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId3     = '+ thirdPartyId3
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId3 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId3      = '+ thirdPartyId3
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 4
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId4 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId4     = '+ thirdPartyId4
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId4 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId4      = '+ thirdPartyId4
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 5
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId5 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId5     = '+ thirdPartyId5
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId5 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId5      = '+ thirdPartyId5
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 6
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId6 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId6     = '+ thirdPartyId6
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId6
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId6 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId6      = '+ thirdPartyId6
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 7
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId7 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId7     = '+ thirdPartyId7
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId7
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId7 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId7      = '+ thirdPartyId7
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 8
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId8 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId8     = '+ thirdPartyId8
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId8
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId8 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId8      = '+ thirdPartyId8
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 9
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId9 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId9     = '+ thirdPartyId9
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId9
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId9 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId9      = '+ thirdPartyId9
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 10
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 19) 10 THIRDPARTY'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId10 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId10    = '+ thirdPartyId10
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId10
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId10 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId10     = '+ thirdPartyId10
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party               |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0x = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
#
## Success: 10 Third-Party
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId2   +"|                |2       |F7                      |            |USD     |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "FULLUPDATE |"+    thirdPartyId3   +"|                |3       |F10                     |            |        |5K-10K           |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "FULLUPDATE |"+    thirdPartyId4   +"|                |4       |F4                      |            |        |                 |AHI          |PRS              |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "FULLUPDATE |"+    thirdPartyId5   +"|                |5       |F2                      |            |        |                 |             |                 |02/22/1987           |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows06 = "FULLUPDATE |"+    thirdPartyId6   +"|                |6       |F6                      |            |        |                 |             |                 |                     |10M    |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|666|             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows07 = "FULLUPDATE |"+    thirdPartyId7   +"|                |7       |F3                      |            |        |                 |             |                 |                     |       |11/02/2008      |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|777|             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows08 = "FULLUPDATE |"+    thirdPartyId8   +"|                |8       |F8                      |            |        |                 |             |                 |                     |       |                |SOE        |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|888|             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows09 = "FULLUPDATE |"+    thirdPartyId9   +"|                |9       |F1                      |            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |DIST_M_SRC     |OTS             |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|999|             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows10 = "FULLUPDATE |"+    thirdPartyId10  +"|                |10      |F9                      |            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |MULTI        |LITTLE_VIS             |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |000|             |           |                    |          |                   |                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     10,
#                             "recordProcessed":     10,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 2
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId2 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId2      = '+ thirdPartyId2
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 3
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId3 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId3      = '+ thirdPartyId3
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 4
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId4 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId4      = '+ thirdPartyId4
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 5
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId5 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId5      = '+ thirdPartyId5
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 6
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId6
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId6
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId6 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId6      = '+ thirdPartyId6
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 7
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId7
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId7
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId7 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId7      = '+ thirdPartyId7
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 8
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId8
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId8
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId8 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId8      = '+ thirdPartyId8
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 9
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId9
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId9
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId9 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId9      = '+ thirdPartyId9
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 10
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId10
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId10
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId10 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId10     = '+ thirdPartyId10
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 20) C37786786 Third-party - FULLUPDATE
#                - Update third-party - 3 errors 2 success
#
#
##
## CREATE third-party
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 20) 3 ERRORS, 2 SUCCESSES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 2
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 20) 3 ERRORS, 2 SUCCESSES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId2 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId2     = '+ thirdPartyId2
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId2 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId2      = '+ thirdPartyId2
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 3
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 20) 3 ERRORS, 2 SUCCESSES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId3 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId3     = '+ thirdPartyId3
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId3 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId3      = '+ thirdPartyId3
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 4
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 20) 3 ERRORS, 2 SUCCESSES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId4 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId4     = '+ thirdPartyId4
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId4 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId4      = '+ thirdPartyId4
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party 5
##
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 20) 3 ERRORS, 2 SUCCESSES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId5 = response.data.id
#
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '******** CREATED: thirdPartyId5     = '+ thirdPartyId5
#    And print '================================\n'
#    And print '\n'
#
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId5 == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId5      = '+ thirdPartyId5
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11111111   |BC 1     |BN1        |United States|1 Main Ave. |Nevada        |Reno  |Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
##    * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
##    * def csvRows02 = "FULLUPDATE |619305f17387a87febdf27da|                |2       |F7                      |            |USD     |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows03 = "FULLUPDATE |619305f17387a87febdf27dd|                |3       |F10                     |            |        |5K-10K           |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows04 = "FULLUPDATE |619305f17387a87febdf27de|                |4       |F4                      |            |        |                 |AHI          |PRS              |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows05 = "FULLUPDATE |619305f17387a87febdf27e0|                |5       |F2                      |            |        |                 |             |                 |02/22/1987            |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows06 = "FULLUPDATE |619305f17387a87febdf27e6|                |6       |F6                      |            |        |                 |             |                 |                     |10M    |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|666|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows07 = "FULLUPDATE |619305f17387a87febdf27e5|                |7       |F3                      |            |        |                 |             |                 |                     |       |11/02/2008      |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|777|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows08 = "FULLUPDATE |619305f17387a87febdf27dc|                |8       |F8                      |            |        |                 |             |                 |                     |       |                |SOE        |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|888|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows09 = "FULLUPDATE |619305f17387a87febdf27db|                |9       |F1                      |            |        |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |DIST_M_SRC     |OTS             |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|999|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows10 = "FULLUPDATE |619305f17387a87febdf27ec|                |10      |F9                      |            |        |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |MULTI        |LITTLE_VIS             |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |000|             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party               |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |F5-ERROR-"+   nowMs +"  |CORP        |XxX     |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |OTS           |               |                |             |                       |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|111|test1@test.ca|DESC-FULUPD|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId2   +"|                |2       |F7-ERROR-"+   nowMs +"  |            |USD     |XxXxXx           |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "FULLUPDATE |"+    thirdPartyId3   +"|                |3       |F10-ERROR-"+  nowMs +"  |            |        |5K-10K           |XxXxX        |XxX              |XxXxXxXxXxXx         |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "FULLUPDATE |"+    thirdPartyId4   +"|                |4       |F4-SUCCESS-"+ nowMs +"  |            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "FULLUPDATE |"+    thirdPartyId5   +"|                |5       |F2-SUCCESS-"+ nowMs +"  |            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     5,
#                             "recordProcessed":     2,
#                             "recordWithErrors":    3,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 2
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId2
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId2 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId2      = '+ thirdPartyId2
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 3
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId3
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId3 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId3      = '+ thirdPartyId3
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 4
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId4 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId4      = '+ thirdPartyId4
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id 5
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId5
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyId5 )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId5      = '+ thirdPartyId5
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 21) C37786768 Third-party - FULLUPDATE
#                - Verify error for Incomplete Bank details
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 21) BANK DETAILS - INCOMPLETE'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11111111   |BC 1     |BN1        |United States|1 Main Ave. |Nevada        |Reno  |Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
##    * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
##    * def csvRows02 = "FULLUPDATE |619305f17387a87febdf27da|                |2       |F7                      |            |USD     |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows03 = "FULLUPDATE |619305f17387a87febdf27dd|                |3       |F10                     |            |        |5K-10K           |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows04 = "FULLUPDATE |619305f17387a87febdf27de|                |4       |F4                      |            |        |                 |AHI          |PRS              |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows05 = "FULLUPDATE |619305f17387a87febdf27e0|                |5       |F2                      |            |        |                 |             |                 |02/22/1987            |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows06 = "FULLUPDATE |619305f17387a87febdf27e6|                |6       |F6                      |            |        |                 |             |                 |                     |10M    |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|666|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows07 = "FULLUPDATE |619305f17387a87febdf27e5|                |7       |F3                      |            |        |                 |             |                 |                     |       |11/02/2008      |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|777|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows08 = "FULLUPDATE |619305f17387a87febdf27dc|                |8       |F8                      |            |        |                 |             |                 |                     |       |                |SOE        |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|888|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows09 = "FULLUPDATE |619305f17387a87febdf27db|                |9       |F1                      |            |        |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |DIST_M_SRC     |OTS             |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |112233      |www.test1.com|999|             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows10 = "FULLUPDATE |619305f17387a87febdf27ec|                |10      |F9                      |            |        |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |              |               |                |MULTI        |LITTLE_VIS             |                    |              |         |                 |           |         |           |             |            |              |      |Americas|               |Chile      |            |             |000|             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE |619305f17387a87febdf27df|                |1       |F5-ERROR-"+   nowMs +"  |CORP        |GSA     |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|MyDivision|Default       |OTS           |               |                |             |                       |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|111|test1@test.ca|DESC-FULUPD|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Incomplete bank details / 6191c4407387a87febdf276d
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |E8-INCBANKDTLS-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |              |               |                |             |                       |                    |              |AA1      |                 |4543       |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 22) C37786767 Third-party - FULLUPDATE
#                - Verify error for Other Name that already exists
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 22) DUPLICATE OTHER NAME'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Duplicate 'Other Name'
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 23) C37786765 Third-party - FULLUPDATE
#                - Verify error for Region and Country - Invalid pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 23) REGION-COUNTRY - INVALID PAIR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Region and Country - Invalid pairing
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Asia     |11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 24) C3778676  Third-party - FULLUPDATE
#                - Verify error for Business Category - Invalid Industry Type pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 24) INDUSTRY TYPE - INVALID PAIRING'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Region and Country - Invalid pairing
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 25) C37786749 Third-party - FULLUPDATE
#                - Verify error for Bank Details - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 25) BANK DETAIL - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party               |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Bank Details Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |E8-FULUPDBKDTL-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |rddcentre.admin.np@refinitiv.com|Operations|Default       |              |               |                |             |                       |                    |              |MayBank  |11 Finance Avenue|12345678   |Ontario  |MB Ont. Br.|Invalid Ctry.|            |              |      |        |               |Canada     |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com           |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                               |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 26) C37786747 Third-party - FULLUPDATE
#                - Verify error for General Information - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 26) GENERAL INFORMATION - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: General Information Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-GINFOINV"+nowMs+"|JH34        |H435    |HOH              |UIOGV        |IOYFV            |KLNJK                |JH     |JKGJK           |KLJH       |HG                      |LJH       |GH            |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 27) C37786750 Third-party - FULLUPDATE
#                - Verify error for Address - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 27) ADDRESS - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Address - Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ADDR-INV"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |Operations|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |ASGG    |               |           |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |2       |FULUPD-ADDR-INV"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |Operations|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |AAA        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     2,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    2,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'



#  Scenario: 28) C37786752 Third-party - FULLUPDATE
#                - Verify error for Other Names - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 28) OTHER NAMES - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Other Name - Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ONMS-INV"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |Acme1 Inc.|XXXXXXXX           |XXXXXXXX          |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 29) C37786751 Third-party - FULLUPDATE
#                - Verify error for Contact - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 29) CONTACT - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: Contact - Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-CNTC-INV"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |XXXXXXXX@yopmail.com    |MyDivision|DashboardP2   |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Thailand   |111111      |www.test1.com|456|test1@test.ph|           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 30) C37786748 Third-party - FULLUPDATE
#                - Verify error for Third-party Segmentation - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 30) THIRDPARTY SEGMENTATION - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party       |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: General Information
##   * def csvRows0a = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |BN 1     |BA 1             |11223344   |BC 1     |BN1        |United States|Address 1   |State 1       |City 1|Americas|11111          |Canada     |112233      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Dello     |Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#
## Error: ThirdParty Segmentation - Invalid Values
##   * def csvRows01 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |MIL              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MayBank  |11 Finance Avenue|12345678   |Ont.     |MayBank Ont|United States|1 Maple Ave.|Toronto       |Ont.  |Americas|11111          |Canada     |111111      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme1 Inc.|Local Language Name|Vietnam           |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-SEGM-INV"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |XXX           |XXXX           |XXXXXX          |XXXX         |XXX                    |XX                  |XXXXX         |         |                 |           |         |           |             |            |              |      |        |               |Canada     |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
##    * def csvRows02 = "FULLUPDATE |61711a8c1f851700016d60ce|qwerty1         |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com    |MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |         |                 |           |         |           |             |2 Rizal Ave.|Metro Manila  |QC    |Asia    |22222          |Philippines|222222      |www.test2.com|456|test2@test.ph|           |                    |Acme1 Inc.|Local Language Name|                  |                  |                   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                        |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |             |   |             |           |                    |Acme Corp.|Local Language Name|                  |                  |                   \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 31) C37786753 Third-party - FULLUPDATE
#                - Verify error for Other Information - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 31) OTHER INFO - INVALID VALUES'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Other Information - Invalid values
##    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |Field1                     |FULLUPDATE - TEXT - "+ nowMs +"   \n"
##    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Number field               |"+ nowMs +"                       \n"
##    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Date custom field          |"+ nowMs +"                       \n"
##    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Commodity type singleselect|3PL Services      - "+ nowMs +"   \n"
##    * def csvRows05 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Risk tier singleselect     |Low Risk          - "+ nowMs +"   \n"
##    * def csvRows06 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |TESTING                    |Americas-"+nowMs+", Asia-"+nowMs+"\n"
#
##    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |12      |FULUPD-ONMSINVA"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |Field1                     |FULLUPDATE - TEXT - "+ nowMs +"   \n"
##    * def csvRows02 = "           |                        |                |12      |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Number field               |"+ nowMs +"                       \n"
#
#    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ONMSINVA"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |XXXXXXX"+ nowMs +"         |ABCXYZ"+ nowMs +"                 \n"
#    * def csvRows02 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Number field               |DEFTUV"+ nowMs +"                 \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Date custom field          |GHIQRS"+ nowMs +"                 \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Commodity type singleselect|JKLNOP"+ nowMs +"                 \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 32) C37786741 Third-party - FULLUPDATE
#                - Verify error for Invalid Action Type
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 32) ACTION TYPE - INVALID'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Action Type = Invalid
#    * def csvRows01 = "XXXXXXXX   |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULUPD-ACTTYP -"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Canada     |            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
#    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ACTTYPX-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
##    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Date custom field          |GHIQRS"+ nowMs +"                 \n"
##    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |Commodity type singleselect|JKLNOP"+ nowMs +"                 \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
#  Scenario: 33) C37786742 Third-party - FULLUPDATE
#                - Verify error for Missing fields
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 33) MISSING FIELDS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## CREATE third-party
##
#    * def requestBody_createThirdParty =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "ABC-3P-BULKUPLOAD Corp",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    Given url postUrl = baseTestUrl
#    And path 'thirdparty'
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    And request requestBody_createThirdParty
#    When method POST
#    Then status 201
#
#    * def thirdPartyId = response.data.id
#
#
#    * def incDateReq =        requestBody_createThirdParty.incorporationDate
#    * def incDateResp =       response.data.incorporationDate
#
#    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY'
#    And print '******** TEST   : nowMs             = '+ nowMs
#    And print '********        : nowISODate        = '+ nowISODate
#    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
#    And print '********        :'
#    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
#    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
#    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
#    And print '********        :'
#    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
#    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
#    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
#    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
#    And print '********        :'
#    And print '********        : now000000ISODate  = '+ now000000ISODate
#    And print '********        : now235959ISODate  = '+ now235959ISODate
#    And print '********        : nowStartISODate4  = '+ nowStartISODate4
#    And print '********        : nowEndISODate4    = '+ nowEndISODate4
#    And print '********        :'
#    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
#    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
#    And print '********        :'
#    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
#    And print '********        : incDateReq        = '+ incDateReq
#    And print '********        : incDateResp       = '+ incDateResp
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#
#    * def riskTier_enums = [ "Low", "Medium", "High" ]
#
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                              "id":                     '##string',
#                              "referenceNo":            '##string',
#                              "name":                   '##string',
#                              "currency":               '##string',
#                              "companyType":            '##string',
#                              "industryType":           '##string',
#                              "organizationSize":       '##string',
#                              "businessType":           '##string',
#                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "revenue":                '##string',
#                              "responsibleParty":       '##string',
#                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "divisions":              '##[] #string',
#                              "affiliation":            '##string',
#                              "workflowGroupId":        '##string',
#                              "assessmentDetail":       '##string',
#                              "address":                {
#                                                          "addressLine":          '##string',
#                                                          "city":                 '##string',
#                                                          "province":             '##string',
#                                                          "postalCode":           '##string',
#                                                          "region":               '##string',
#                                                          "country":              '##string'
#                                                        },
#                              "spendCategory":          '##string',
#                              "sourcingMethod":         '##string',
#                              "productDesignAgreement": '##string',
#                              "sourcingType":           '##string',
#                              "relationshipVisibility": '##string',
#                              "productImpact":          '##string',
#                              "commodityType":          '##string',
#                              "customFields":           '##[] ^ {
#                                                                  active:              "##boolean",
#                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  description:         "##string",
#                                                                  id:                  "##string",
#                                                                  name:                "##string",
#                                                                  options:             "##[] ^ {
#                                                                                                 option:  ##string,
#                                                                                                 redFlag: ##boolean,
#                                                                                               }",
#                                                                  orderNumber:         "##number",
#                                                                  status:              "##string",
#                                                                  type:                "##string",
#                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                                                                  usePredefinedValues: "##boolean",
#                                                                  value:               "##string",
#                                                                }',
#                              "bankDetails":            '##[] ^ {
#                                                                  name:                "##string",
#                                                                  accountNo:           "##string",
#                                                                  branchName:          "##string",
#                                                                  addressLine:         "##string",
#                                                                  city:                "##string",
#                                                                  country:             "##string",
#                                                                }',
#                              "contactInformation":     {
#                                                          "phoneNumber": '##[] #string',
#                                                          "fax":         '##[] #string',
#                                                          "website":     '##[] #string',
#                                                          "email":       '##[] #string',
#                                                        },
#                              "status":                 '##string',
#                              "overallRiskScore":       '##number',
#                              "riskTier":               '#? riskTier_enums.contains(_)',
#                              "overallStatus":          '##string',
#                              "screeningStatus":        '##string',
#                              "otherNames":             '##[] ^ {
#                                                                  name:                  "##string",
#                                                                  iwNameType:            "##string",
#                                                                  countryOfRegistration: "##string",
#                                                                }',
#                              "countryAlerts":          '##string',
#                              "description":            '##string',
#                              "description":            '##string',
#                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
#                           }
#              }
#          """
#
##  ,
##  "regionAndCountryPair": {
##  "value2": '##string',
##  "value1": '##string'
##  }
#
##
## CHECK: Retrieve third-party BY ID - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyId
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#    * def thirdPartyIdResult = response.data.id
#    And match thirdPartyId == thirdPartyIdResult
#
#
#    * def eTag = responseHeaders['ETag'][0].split('"')[1]
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
#    And print '******** ETag               = '+ eTag
#    And print '================================\n'
#    And print '\n'
#
#
##
## TODO: Validate response body schema: NO NEED?
##
#
#
##
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
## ================================================================================================
## Test 1: Error ==================================================================================
## ================================================================================================
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Missing fields
#    * def csvRows01 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
##    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ACTTYPX-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##    * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ================================================================================================
## Test 2: Error ==================================================================================
## ================================================================================================
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Missing fields
#    * def csvRows01 = "FULLUPDATE |                        |                |        |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
##    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ACTTYPX-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##    * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
## ================================================================================================
## Test 3: Error ==================================================================================
## ================================================================================================
#
##   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country    |Phone Number|Website    |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name         |Custom Fields Value\n"
#
## Success: reference no.
##   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Success: thirdParty id
##   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Missing fields
#    * def csvRows01 = "FULLUPDATE |                        |                |2       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |           |            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
##    * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ACTTYPX-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
#
## Error: Non-existent 'thirdParty id'
##   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
## Error: Non-existent 'referenceNo'
##   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##    * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
#
## PAUSE to allow for server processing of file attachment
#
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
#    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
#    Then print response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##
## DELETE third-party by id
##
#
#    Given url deleteUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method DELETE
#    Then status 204
#
#
##
## CHECK: Retrieve third-party BY ID - expected: NOT FOUND
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty', thirdPartyIdResult
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 404
#
#
##
## CHECK: Get third-parties LIST for this day - expected: NOT FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def thirdPartyIds = get response.data[*].id
#    And assert !thirdPartyIds.contains( thirdPartyIdResult )
#
#    * def count = response.data.length
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length = '+ count
#    And print '******** thirdPartyId       = '+ thirdPartyId
#    And print '******** thirdPartyIds      = '+ thirdPartyIds
#    And print '================================\n'
#    And print '\n'
#
#
#
##  Scenario: 34) C37786770 Third-party - FULLUPDATE
##                - Verify error for No Permission to Edit Third-party (Forbidden)
##
##    * def nowMs = call fnGetNowMs
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 34) USER FORBIDDEN'
##    And print '******** nowMs = '+ nowMs
##    And print '================================\n'
##    And print '\n'
##
##
###
### CREATE third-party
###
##    * def requestBody_createThirdParty =
##      """
##          {
##            "referenceNo": "#(''+ nowMs)",
##            "name": "ABC-3P-BULKUPLOAD Corp",
##            "currency": "USD",
##            "companyType": "CORP",
##            "industryType": "AHI",
##            "organizationSize": "11-50",
##            "businessType": "PRS",
##            "incorporationDate": "2021-06-18T05:32:07-0800",
##            "revenue": "10M",
##            "responsibleParty": "si_admin@yopmail.com",
##            "liquidationDate": "2021-06-18T05:32:07-0800",
##            "divisions": [
##              "MyDivision"
##            ],
##            "affiliation": "SOE",
##            "workflowGroupId": "#(workflowGroupId)",
##            "spendCategory": "OTS",
##            "sourcingMethod": "DIST_M_SRC",
##            "productDesignAgreement": "OTS",
##            "sourcingType": "MULTI",
##            "relationshipVisibility": "LITTLE_VIS",
##            "productImpact": "COMMODITIZED_PRODUCT",
##            "commodityType": "A3P",
##            "address": {
##              "addressLine": "Address Line 1",
##              "city": "City 1",
##              "country": "US",
##              "postalCode": "31080",
##              "province": "Province 1",
##              "region": "#(region)"
##            },
##            "contactInformation": {
##              "email": [
##                "john.smith@company1.com"
##              ],
##              "fax": [
##                "+91 (123) 456-7890"
##              ],
##              "phoneNumber": [
##                "(123) 456-7890"
##              ],
##              "website": [
##                "http://www.company1.com"
##              ]
##            },
##            "description": "This is supplier description",
##            "customFields": [],
##            "bankDetails": [
##              {
##                "accountNo": "111-11111111-1",
##                "addressLine": "Address 1",
##                "branchName": "Branch Name",
##                "city": "City 1",
##                "country": "US",
##                "name": "Bank Name"
##              }
##            ],
##            "otherNames": [
##            ]
##          }
##      """
##
##    Given url postUrl = baseTestUrl
##    And path 'thirdparty'
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    And request requestBody_createThirdParty
##    When method POST
##    Then status 201
##
##    * def thirdPartyId = response.data.id
##
##
##    * def incDateReq =        requestBody_createThirdParty.incorporationDate
##    * def incDateResp =       response.data.incorporationDate
##
##    And match incDateReq ==   '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
##    And match incDateResp ==  '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$'
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY'
##    And print '******** TEST   : nowMs             = '+ nowMs
##    And print '********        : nowISODate        = '+ nowISODate
##    And print '********        : nowEpochTimeMs    = '+ nowEpochTimeMs
##    And print '********        :'
##    And print '********        : nowISODateLocTzo  = '+ nowISODateLocTzo
##    And print '********        : nowISODateLTzoMs  = '+ nowISODateLTzoMs
##    And print '********        : nowISODateLTzoMin = '+ nowISODateLTzoMin
##    And print '********        :'
##    And print '********        : nowISODateUTCTzo  = '+ nowISODateUTCTzo
##    And print '********        : nowISODateUTCTzo8 = '+ nowISODateUTCTzo8
##    And print '********        : nowISODateUTzoMs  = '+ nowISODateUTzoMs
##    And print '********        : nowISODateUTzoMin = '+ nowISODateUTzoMin
##    And print '********        :'
##    And print '********        : now000000ISODate  = '+ now000000ISODate
##    And print '********        : now235959ISODate  = '+ now235959ISODate
##    And print '********        : nowStartISODate4  = '+ nowStartISODate4
##    And print '********        : nowEndISODate4    = '+ nowEndISODate4
##    And print '********        :'
##    And print '********        : nowISODateAsUTC   = '+ nowISODateAsUTC
##    And print '********        : nowISODateToUTC   = '+ nowISODateToUTC
##    And print '********        :'
##    And print '******** CREATED: thirdPartyId      = '+ thirdPartyId
##    And print '********        : incDateReq        = '+ incDateReq
##    And print '********        : incDateResp       = '+ incDateResp
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##
##    * def riskTier_enums = [ "Low", "Medium", "High" ]
##
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                              "id":                     '##string',
##                              "referenceNo":            '##string',
##                              "name":                   '##string',
##                              "currency":               '##string',
##                              "companyType":            '##string',
##                              "industryType":           '##string',
##                              "organizationSize":       '##string',
##                              "businessType":           '##string',
##                              "incorporationDate":      '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
##                              "revenue":                '##string',
##                              "responsibleParty":       '##string',
##                              "liquidationDate":        '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
##                              "divisions":              '##[] #string',
##                              "affiliation":            '##string',
##                              "workflowGroupId":        '##string',
##                              "assessmentDetail":       '##string',
##                              "address":                {
##                                                          "addressLine":          '##string',
##                                                          "city":                 '##string',
##                                                          "province":             '##string',
##                                                          "postalCode":           '##string',
##                                                          "region":               '##string',
##                                                          "country":              '##string'
##                                                        },
##                              "spendCategory":          '##string',
##                              "sourcingMethod":         '##string',
##                              "productDesignAgreement": '##string',
##                              "sourcingType":           '##string',
##                              "relationshipVisibility": '##string',
##                              "productImpact":          '##string',
##                              "commodityType":          '##string',
##                              "customFields":           '##[] ^ {
##                                                                  active:              "##boolean",
##                                                                  createTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                                                                  description:         "##string",
##                                                                  id:                  "##string",
##                                                                  name:                "##string",
##                                                                  options:             "##[] ^ {
##                                                                                                 option:  ##string,
##                                                                                                 redFlag: ##boolean,
##                                                                                               }",
##                                                                  orderNumber:         "##number",
##                                                                  status:              "##string",
##                                                                  type:                "##string",
##                                                                  updateTime:          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                                                                  usePredefinedValues: "##boolean",
##                                                                  value:               "##string",
##                                                                }',
##                              "bankDetails":            '##[] ^ {
##                                                                  name:                "##string",
##                                                                  accountNo:           "##string",
##                                                                  branchName:          "##string",
##                                                                  addressLine:         "##string",
##                                                                  city:                "##string",
##                                                                  country:             "##string",
##                                                                }',
##                              "contactInformation":     {
##                                                          "phoneNumber": '##[] #string',
##                                                          "fax":         '##[] #string',
##                                                          "website":     '##[] #string',
##                                                          "email":       '##[] #string',
##                                                        },
##                              "status":                 '##string',
##                              "overallRiskScore":       '##number',
##                              "riskTier":               '#? riskTier_enums.contains(_)',
##                              "overallStatus":          '##string',
##                              "screeningStatus":        '##string',
##                              "otherNames":             '##[] ^ {
##                                                                  name:                  "##string",
##                                                                  iwNameType:            "##string",
##                                                                  countryOfRegistration: "##string",
##                                                                }',
##                              "countryAlerts":          '##string',
##                              "description":            '##string',
##                              "createTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
##                              "updateTime":             '##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$',
##                           }
##              }
##          """
##
###  ,
###  "regionAndCountryPair": {
###  "value2": '##string',
###  "value1": '##string'
###  }
##
###
### CHECK: Retrieve third-party BY ID - expected: FOUND
###
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyId
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##
##    * def thirdPartyIdResult = response.data.id
##    And match thirdPartyId == thirdPartyIdResult
##
##
##    * def eTag = responseHeaders['ETag'][0].split('"')[1]
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY BY ID'
##    And print '******** thirdPartyId       = '+ thirdPartyId
##    And print '******** thirdPartyIdResult = '+ thirdPartyIdResult
##    And print '******** ETag               = '+ eTag
##    And print '================================\n'
##    And print '\n'
##
##
###
### TODO: Validate response body schema: NO NEED?
###
##
##
###
### CHECK: Get third-parties LIST for this day - expected: FOUND
###
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##    * def thirdPartyIds = get response.data[*].id
##    And assert thirdPartyIds.contains( thirdPartyIdResult )
##
##    * def count = response.data.length
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length = '+ count
##    And print '******** thirdPartyId       = '+ thirdPartyId
##    And print '******** thirdPartyIds      = '+ thirdPartyIds
##    And print '================================\n'
##    And print '\n'
##
##
###   * def csvRows00 = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\n"
###   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE ABCXYZ-123789||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
##    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
##
### Success: reference no.
###   * def csvRows01 = "FULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
### Success: thirdParty id
###   * def csvRows01 = "FULLUPDATE|61711a8c1f851700016d60ce|qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
### Error: Unauthorized user
##    * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-XAUTUSR-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |imie.bulda@refinitiv.com|Operations|Imie WF   |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULLUPDATE - "+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
###   * def csvRows02 = "FULLUPDATE |"+    thirdPartyId    +"|                |1       |FULUPD-ACTTYPX-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |              |              |         |                 |           |         |           |            |            |              |    |      |               |Philippines|            |           |   |             |           |                    |          |               |                  |                           |                                  \n"
##
### Error: Non-existent 'thirdParty id'
###   * def csvRows01 = "FULLUPDATE|xxxxxxxxxx||1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
### Error: Non-existent 'referenceNo'
###   * def csvRows01 = "FULLUPDATE||qwerty1-xxx|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
##    * def csvRowsT = csvRows00 + csvRows01
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###    * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
##
### PAUSE to allow for server processing of file attachment
##
##    * pauseExecution( 1000 )
##
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
##    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
##    Then print response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": null,
##                             "errorResponseFile":   {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "numberOfRecords":     1,
##                             "recordProcessed":     0,
##                             "recordWithErrors":    1,
##                             "triggeredBy":         "#string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """
##
##
###
### DELETE third-party by id
###
##
##    Given url deleteUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdResult
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method DELETE
##    Then status 204
##
##
###
### CHECK: Retrieve third-party BY ID - expected: NOT FOUND
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdResult
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 404
##
##
###
### CHECK: Get third-parties LIST for this day - expected: NOT FOUND
###
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##    * def thirdPartyIds = get response.data[*].id
##    And assert !thirdPartyIds.contains( thirdPartyIdResult )
##
##    * def count = response.data.length
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length = '+ count
##    And print '******** thirdPartyId       = '+ thirdPartyId
##    And print '******** thirdPartyIds      = '+ thirdPartyIds
##    And print '================================\n'
##    And print '\n'



#  Scenario: 35) C37786682 Third-party - ADD
#                - Single line - Verify that Third-party is created
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 01) ADD SINGLE SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada     |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |ADD 1LINE - "+  nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada     |0018001     |www.test1.com|234|tst@email.com|Test desc. |                    |Acme Corp.|Local Language Name|France            |Field1            |Test CUSTOM FLD VAL\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
##    * def thirdPartyIds = get response.data[*].id
##
##    * def count = response.data.length
##
### Get CREATED third-party id
##    * def thirdPartyIdCreated = thirdPartyIds[ count - 1 ]
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdCreated = '+ thirdPartyIdCreated
##    And print '******** thirdPartyIds       = '+ thirdPartyIds
##    And print '================================\n'
##    And print '\n'
##
##
###
### DELETE third-party by id
###
##
##    Given url deleteUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdCreated
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method DELETE
##    Then status 204
##
##
###
### CHECK: Retrieve third-party BY ID - expected: NOT FOUND
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdCreated
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 404
##
##
###
### CHECK: Get third-parties LIST for this day - expected: NOT FOUND
###
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##    * def thirdPartyIds = get response.data[*].id
##    And assert !thirdPartyIds.contains( thirdPartyIdCreated )
##
##    * def count = response.data.length
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdCreated = '+ thirdPartyIdCreated
##    And print '******** thirdPartyIds       = '+ thirdPartyIds
##    And print '================================\n'
##    And print '\n'
#
#
#
#  Scenario: 36) C37786683 Third-party - ADD
#                - Multiple lines - Verify that Third-party is created
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 02) ADD MULTIPLE SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country    |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada     |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |A-"+   nowMs  +"|1       |ADD N-LINES-A"+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|11 Finance Avenue|11111111111|Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP11111       |Canada     |00180011111 |www.test1.com|111|tst1@email.ca|Test desc. |                    |Acme1 Inc.|Local Language Name|France            |Field1            |Test CUSTOM FLD VAL\n"
#    * def csvRows02 = "           |                        |B-"+   nowMs  +"|1       |ADD N-LINES-B"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |                    |MyDivision|              |              |               |                |             |                       |                    |              |ForteBank|22 Finance Avenue|22222222222|Chicago  |FB Chi. Br.|United States|22 Main Ave.|Brit.Columbia |Victor|Americas|ZIP22222       |Canada     |00180022222 |www.test2.com|222|tst2@email.ca|           |                    |Acme2 Inc.|Local Language Name|United States     |                  |                   \n"
#    * def csvRows03 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |33 Main Ave.|Nova Scotia   |Halifx|Americas|ZIP33333       |Canada     |            |www.test3.com|   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "           |                        |                |1       |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |           |            |www.test4.com|   |             |           |                    |          |                   |                  |                  |\n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
###
### DELETE third-party by id
###
##
##    Given url deleteUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdCreated
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method DELETE
##    Then status 204
##
##
###
### CHECK: Retrieve third-party BY ID - expected: NOT FOUND
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty', thirdPartyIdCreated
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 404
##
##
###
### CHECK: Get third-parties LIST for this day - expected: NOT FOUND
###
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##    * def thirdPartyIds = get response.data[*].id
##    And assert !thirdPartyIds.contains( thirdPartyIdCreated )
##
##    * def count = response.data.length
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdCreated = '+ thirdPartyIdCreated
##    And print '******** thirdPartyIds       = '+ thirdPartyIds
##    And print '================================\n'
##    And print '\n'
#
#
#
#  Scenario: 37) C37786688  Third-party - ADD
#                - Create 10 third-party
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 03) ADD 10 THIRD-PARTY SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |AAA01   |ADD 10 3Ps -A"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "ADD        |                        |                |AAA02   |ADD 10 3Ps -B"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "ADD        |                        |                |AAA03   |ADD 10 3Ps -C"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "ADD        |                        |                |AAA04   |ADD 10 3Ps -D"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "ADD        |                        |                |AAA05   |ADD 10 3Ps -E"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows06 = "ADD        |                        |                |AAA06   |ADD 10 3Ps -F"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows07 = "ADD        |                        |                |AAA07   |ADD 10 3Ps -G"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows08 = "ADD        |                        |                |AAA08   |ADD 10 3Ps -H"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows09 = "ADD        |                        |                |AAA09   |ADD 10 3Ps -I"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows10 = "ADD        |                        |                |AAA10   |ADD 10 3Ps -J"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     10,
#                             "recordProcessed":     10,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
#
#  Scenario: 38) C37786689 Third-party - ADD
#                - Create 25 third-party
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 04) ADD 25 THIRD-PARTY SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |AAA1    |ADD 25 3Ps -A"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "ADD        |                        |                |AAA2    |ADD 25 3Ps -B"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "ADD        |                        |                |AAA3    |ADD 25 3Ps -C"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "ADD        |                        |                |AAA4    |ADD 25 3Ps -D"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "ADD        |                        |                |AAA5    |ADD 25 3Ps -E"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows06 = "ADD        |                        |                |AAA6    |ADD 25 3Ps -F"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows07 = "ADD        |                        |                |AAA7    |ADD 25 3Ps -G"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows08 = "ADD        |                        |                |AAA8    |ADD 25 3Ps -H"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows09 = "ADD        |                        |                |AAA9    |ADD 25 3Ps -I"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows10 = "ADD        |                        |                |AAA10   |ADD 25 3Ps -J"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows11 = "ADD        |                        |                |AAA11   |ADD 25 3Ps -K"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows12 = "ADD        |                        |                |AAA12   |ADD 25 3Ps -L"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows13 = "ADD        |                        |                |AAA13   |ADD 25 3Ps -M"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows14 = "ADD        |                        |                |AAA14   |ADD 25 3Ps -N"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows15 = "ADD        |                        |                |AAA15   |ADD 25 3Ps -O"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows16 = "ADD        |                        |                |AAA16   |ADD 25 3Ps -P"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows17 = "ADD        |                        |                |AAA17   |ADD 25 3Ps -Q"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows18 = "ADD        |                        |                |AAA18   |ADD 25 3Ps -R"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows19 = "ADD        |                        |                |AAA19   |ADD 25 3Ps -S"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows20 = "ADD        |                        |                |AAA20   |ADD 25 3Ps -T"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows21 = "ADD        |                        |                |AAA21   |ADD 25 3Ps -U"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows22 = "ADD        |                        |                |AAA22   |ADD 25 3Ps -V"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows23 = "ADD        |                        |                |AAA23   |ADD 25 3Ps -W"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows24 = "ADD        |                        |                |AAA24   |ADD 25 3Ps -X"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows25 = "ADD        |                        |                |AAA25   |ADD 25 3Ps -Y"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10 + csvRows11 + csvRows12 + csvRows13 + csvRows14 + csvRows15 + csvRows16 + csvRows17 + csvRows18 + csvRows19 + csvRows20 + csvRows21 + csvRows22 + csvRows23 + csvRows24 + csvRows25
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     25,
#                             "recordProcessed":     25,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
#
#  Scenario: 39) C37786690 Third-party - ADD
#                - Create 50 third-party
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 05) ADD 50 THIRD-PARTY SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |AAA01   |ADD 50 3Ps -A"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "ADD        |                        |                |AAA02   |ADD 50 3Ps -B"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "ADD        |                        |                |AAA03   |ADD 50 3Ps -C"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "ADD        |                        |                |AAA04   |ADD 50 3Ps -D"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "ADD        |                        |                |AAA05   |ADD 50 3Ps -E"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows06 = "ADD        |                        |                |AAA06   |ADD 50 3Ps -F"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows07 = "ADD        |                        |                |AAA07   |ADD 50 3Ps -G"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows08 = "ADD        |                        |                |AAA08   |ADD 50 3Ps -H"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows09 = "ADD        |                        |                |AAA09   |ADD 50 3Ps -I"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows10 = "ADD        |                        |                |AAA10   |ADD 50 3Ps -J"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows11 = "ADD        |                        |                |AAA11   |ADD 50 3Ps -K"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows12 = "ADD        |                        |                |AAA12   |ADD 50 3Ps -L"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows13 = "ADD        |                        |                |AAA13   |ADD 50 3Ps -M"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows14 = "ADD        |                        |                |AAA14   |ADD 50 3Ps -N"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows15 = "ADD        |                        |                |AAA15   |ADD 50 3Ps -O"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows16 = "ADD        |                        |                |AAA16   |ADD 50 3Ps -P"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows17 = "ADD        |                        |                |AAA17   |ADD 50 3Ps -Q"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows18 = "ADD        |                        |                |AAA18   |ADD 50 3Ps -R"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows19 = "ADD        |                        |                |AAA19   |ADD 50 3Ps -S"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows20 = "ADD        |                        |                |AAA20   |ADD 50 3Ps -T"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows21 = "ADD        |                        |                |AAA21   |ADD 50 3Ps -U"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows22 = "ADD        |                        |                |AAA22   |ADD 50 3Ps -V"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows23 = "ADD        |                        |                |AAA23   |ADD 50 3Ps -W"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows24 = "ADD        |                        |                |AAA24   |ADD 50 3Ps -X"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows25 = "ADD        |                        |                |AAA25   |ADD 50 3Ps -Y"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows26 = "ADD        |                        |                |AAA26   |ADD 50 3Ps -Z"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows27 = "ADD        |                        |                |AAA27   |ADD 50 3Ps -!"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows28 = "ADD        |                        |                |AAA28   |ADD 50 3Ps -@"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows29 = "ADD        |                        |                |AAA29   |ADD 50 3Ps -#"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows30 = "ADD        |                        |                |AAA30   |ADD 50 3Ps -$"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows31 = "ADD        |                        |                |AAA31   |ADD 50 3Ps -a"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows32 = "ADD        |                        |                |AAA32   |ADD 50 3Ps -b"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows33 = "ADD        |                        |                |AAA33   |ADD 50 3Ps -c"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows34 = "ADD        |                        |                |AAA34   |ADD 50 3Ps -d"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows35 = "ADD        |                        |                |AAA35   |ADD 50 3Ps -e"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows36 = "ADD        |                        |                |AAA36   |ADD 50 3Ps -f"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows37 = "ADD        |                        |                |AAA37   |ADD 50 3Ps -g"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows38 = "ADD        |                        |                |AAA38   |ADD 50 3Ps -h"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows39 = "ADD        |                        |                |AAA39   |ADD 50 3Ps -i"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows40 = "ADD        |                        |                |AAA40   |ADD 50 3Ps -j"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRows41 = "ADD        |                        |                |AAA41   |ADD 50 3Ps -k"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |China        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows42 = "ADD        |                        |                |AAA42   |ADD 50 3Ps -l"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows43 = "ADD        |                        |                |AAA43   |ADD 50 3Ps -m"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Afghanistan  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows44 = "ADD        |                        |                |AAA44   |ADD 50 3Ps -n"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Philippines  |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows45 = "ADD        |                        |                |AAA45   |ADD 50 3Ps -o"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows46 = "ADD        |                        |                |AAA46   |ADD 50 3Ps -p"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |France       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows47 = "ADD        |                        |                |AAA47   |ADD 50 3Ps -q"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Italy        |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows48 = "ADD        |                        |                |AAA48   |ADD 50 3Ps -r"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Brazil       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows49 = "ADD        |                        |                |AAA49   |ADD 50 3Ps -s"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Argentina    |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows50 = "ADD        |                        |                |AAA50   |ADD 50 3Ps -t"+ nowMs +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |Mexico       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10 + csvRows11 + csvRows12 + csvRows13 + csvRows14 + csvRows15 + csvRows16 + csvRows17 + csvRows18 + csvRows19 + csvRows20 + csvRows21 + csvRows22 + csvRows23 + csvRows24 + csvRows25 + csvRows26 + csvRows27 + csvRows28 + csvRows29 + csvRows30 + csvRows31 + csvRows32 + csvRows33 + csvRows34 + csvRows35 + csvRows36 + csvRows37 + csvRows38 + csvRows39 + csvRows40 + csvRows41 + csvRows42 + csvRows43 + csvRows44 + csvRows45 + csvRows46 + csvRows47 + csvRows48 + csvRows49 + csvRows50
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     50,
#                             "recordProcessed":     50,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
#
#  Scenario: 40) C37786686 Third-party - ADD
#                - Create third-party with required fields only
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 06) REQD FIELDS SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank|12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |AAA01   |汉字漢字 - A"+   nowMs  +"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |         |                 |           |         |           |             |            |              |      |        |               |United States|            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#
#    * def csvRowsT = csvRows00 + csvRows01
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
#
#  Scenario: 41) C37786684 Third-party - ADD
#                - Create third-party with 10 Bank Details
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 07) ADD W 10 BANK DETAILS SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |D01     |ADD 10BNK DTLS          |            |        |                 |             |                 |02/22/2020            |       |11/02/2020      |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank01|01 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|            |              |      |        |               |Canada       |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows02 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank02|02 Finance Avenue|22222222   |NYC      |NY Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows03 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank03|03 Finance Avenue|33333333   |LA       |LA Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows04 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank04|04 Finance Avenue|44444444   |Atlanta  |At.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows05 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank05|05 Finance Avenue|55555555   |Detroit  |De.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows06 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank06|06 Finance Avenue|66666666   |Sacrament|Sa.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows07 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank07|07 Finance Avenue|77777777   |Milwaukee|Mi.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows08 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank08|08 Finance Avenue|88888888   |SnAntonio|SA Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows09 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank09|09 Finance Avenue|99999999   |Austin   |Au.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#    * def csvRows10 = "           |                        |                |D01     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank10|10 Finance Avenue|10101010   |Indiana  |In.Reno Br.|United States|            |              |      |        |               |             |            |             |   |             |           |                    |          |                   |                  |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - FULLUPDATE'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## GET CREATED third-party id:
## CHECK: Get third-parties LIST for this day - expected: FOUND
##
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#    * def dataArr =             get response.data[*]
#    * def dataArrNEW =          $dataArr[ ?(@.name=='ADD 10BNK DTLS') ]
##    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#
#    * def count = response.data.length
#
## Get CREATED third-party id
#    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdCREATED = '+ thirdPartyIdCREATED
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW
#    And print '================================\n'
#    And print '\n'
#
#
##
## DELETE third-party by id
##
#
#    * def thirdPartyIdsNEWArr = call createThirdPartyIdsArrFn thirdPartyIdsNEW
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr
#    And print '================================\n'
#    And print '\n'
#
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
#
#
#
#  Scenario: 42) C37786685 Third-party - ADD
#                - Create third-party with 10 Other Names
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 08) ADD W 10 OTHER NAMES SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com|123|test1@test.ph|Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |AV1     |ADD 10 OTHER NAMES-"+nowMs+"|        |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |Canada       |+18001111111|             |111|             |           |                    |Acme01 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows02 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme02 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows03 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme03 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows04 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme04 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows05 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme05 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows06 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme06 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows07 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme07 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows08 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme08 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows09 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme09 LLC|Local Language Name|Canada            |                  |                   \n"
#    * def csvRows10 = "           |                        |                |AV1     |                        |            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |             |   |             |           |                    |Acme10 LLC|Local Language Name|Canada            |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06 + csvRows07 + csvRows08 + csvRows09 + csvRows10
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## CHECK: Get third-parties LIST for this day
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
#    * def nameVarTARGET =       'ADD 10 OTHER NAMES'
#    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#    * def VALIDATECOUNT =       10
#
#    * def dataArr =             get response.data[*]
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#    * def count =               response.data.length
#
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
##    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
#    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
#    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
#    * def countNAME =           thirdPartyIdsNAME.length
#
##    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
#
## Get TARGET third-party id
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#        }
#      """
#    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
#    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
#    And print '******** nameTARGET          = '+ nameTARGET
#    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
#    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
#    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
#    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
#    And print '================================\n'
#    And print '\n'
#
#
## CONSTRUCT json object array for passing to called feature routine
#    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
#    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
#    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
#    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
#    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
#    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
#    And print '================================'
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE: retrieve TARGET third-party by id
##
#
#    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
#
#    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
#
#    And match otherNamesCount == VALIDATECOUNT
#
#    And print '\n'
#    And print '======== VALIDATE ================================'
#    And print 'TEST otherNames:    COUNT =', otherNamesCount
#    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
#    And print '==================================================\n'
#    And print '\n'
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 43) C37786687 Third-party - ADD
#                - Create third-party with 5 contact information
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 09) ADD W 5 CONTACTS SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address  |Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address  |Description|Other Names Old Name|Other Name|Other Name Type    |Other Name Country|Custom Fields Name|Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test01.com|123|test1@test.ph   |Desc abc123|                    |Acme Inc. |Local Language Name|France            |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|C01     |ADD 5 CONTACTS-"+nowMs+"|            |        |                 |             |                 |                     |       |                |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |Canada       |+18001111111|www.test01.com|111|email01@test.com|           |                    |          |                   |                        |                  |                   \n"
#    * def csvRows02 = "           |                        |                |C01     |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |+18002222222|www.test02.com|222|email02@test.com|           |                    |          |                   |                        |                  |                   \n"
#    * def csvRows03 = "           |                        |                |C01     |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |+18003333333|www.test03.com|333|email03@test.com|           |                    |          |                   |                        |                  |                   \n"
#    * def csvRows04 = "           |                        |                |C01     |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |+18004444444|www.test04.com|444|email04@test.com|           |                    |          |                   |                        |                  |                   \n"
#    * def csvRows05 = "           |                        |                |C01     |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |+18005555555|www.test05.com|555|email05@test.com|           |                    |          |                   |                        |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## CHECK: Get third-parties LIST for this day
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
#    * def nameVarTARGET =       'ADD 5 CONTACTS'
#    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#    * def VALIDATECOUNT =       5
#
#    * def dataArr =             get response.data[*]
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#    * def count =               response.data.length
#
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
##    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
#    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
#    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
#    * def countNAME =           thirdPartyIdsNAME.length
#
##    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
#
## Get TARGET third-party id
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#        }
#      """
#    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
#    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
#    And print '******** nameTARGET          = '+ nameTARGET
#    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
#    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
#    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
#    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
#    And print '================================\n'
#    And print '\n'
#
#
## CONSTRUCT json object array for passing to called feature routine
#    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
#    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
#    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
#    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
#    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
#    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
#    And print '================================'
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE: retrieve TARGET third-party by id
##
#
#    * def retrieveResult =    call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
#
#    * def phoneNumbersCount = retrieveResult[0].response.data.contactInformation.phoneNumber.length
#    * def faxesCount =        retrieveResult[0].response.data.contactInformation.fax.length
#    * def websitesCount =     retrieveResult[0].response.data.contactInformation.website.length
#    * def emailsCount =       retrieveResult[0].response.data.contactInformation.email.length
#
#    And match phoneNumbersCount == VALIDATECOUNT
#    And match faxesCount ==        VALIDATECOUNT
#    And match websitesCount ==     VALIDATECOUNT
#    And match emailsCount ==       VALIDATECOUNT
#
#    And print '\n'
#    And print '======== VALIDATE ================================'
#    And print 'TEST phoneNumbers:  COUNT =', phoneNumbersCount
#    And print 'TEST faxesCount:    COUNT =', faxesCount
#    And print 'TEST websitesCount: COUNT =', websitesCount
#    And print 'TEST emailsCount:   COUNT =', emailsCount
#    And print 'VALIDATE COUNT :    MATCH =', (phoneNumbersCount==VALIDATECOUNT && faxesCount==VALIDATECOUNT && websitesCount==VALIDATECOUNT && emailsCount==VALIDATECOUNT)
#    And print '==================================================\n'
#    And print '\n'
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 44) C37786691 Third-party - ADD
#                - Create third-party - 3 errors 2 success
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 10) ADD 3 ERROR 2 SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name          |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country     |Custom Fields Name |Custom Fields Value\n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name          |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country     |Custom Fields Name |Custom Fields Value\n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+  nowMs  +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test01.com|123|test1@test.ph   |Desc abc123|                    |Acme Inc.   |Local Language Name|France                  |Field1            |FULLUPDATE TEXT    \n"
#    * def csvRows01 = "ADD        |                        |                |001     |ADD SUC_ERR-SUC1-"+nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987           |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+18001111111|www.test01.com|111|email01@test.com|Test desc01|                    |Acme01 Corp.|Local Language Name|France                  |Field1            |Test CUSTOMFLD VAL1\n"
#    * def csvRows02 = "ADD        |                        |                |002     |ADD SUC_ERR-SUC2-"+nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |01/11/2001           |10M    |02/22/2002      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank02|22 Finance Avenue|22222222   |NYC      |MB NYC Br. |United States|11 Main Ave.|              |Quebec|Americas|ZIP90212       |Canada       |+18002222222|www.test02.com|222|email02@test.com|Test desc02|                    |Acme02 Corp.|Local Language Name|Italy                   |Field1            |Test CUSTOMFLD VAL2\n"
#    * def csvRows03 = "ADD        |                        |                |003     |ADD SUC_ERR-ERR1-"+nowMs+"|            |        |XXXXXXXXXXXXXXXXX|             |                 |                     |       |                |           |si_admin@yopmail.com|XXXXXXXXXX|Default       |              |               |XXXXXXXXXXXXXXXX|             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                    |            |                   |                        |                  |                   \n"
#    * def csvRows04 = "ADD        |                        |                |004     |ADD SUC_ERR-ERR2-"+nowMs+"|            |        |                 |XXXXXXXXXXXXX|                 |                     |XXXXXXX|                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                    |            |                   |                        |                  |                   \n"
#    * def csvRows05 = "ADD        |                        |                |005     |ADD SUC_ERR-ERR3-"+nowMs+"|            |        |                 |             |XXXXXXXXXXXXXXXXX|                     |       |                |           |                    |          |              |XXXXXXXXXXXXXX|               |                |             |XXXXXXXXXXXXXXXXXXXXXXX|                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                    |            |                   |                        |                  |                   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     5,
#                             "recordProcessed":     2,
#                             "recordWithErrors":    3,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## CHECK: Get third-parties LIST for this day
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
#    * def nameVarTARGET =       'ADD SUC_ERR'
#    * def nameTARGET =          nameVarTARGET +'-(SUC/ERR)[0-9]{1}-'+ nowMs
#    * def VALIDATECOUNT =       5
#
#    * def dataArr =             get response.data[*]
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#    * def count =               response.data.length
#
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +"|ADD SUC\/ERR)(([-])(SUC|ERR)[0-9]{1}([-][0-9]{13}))?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
##    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
#    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
#    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
#    * def countNAME =           thirdPartyIdsNAME.length
#
##    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
#
## Get TARGET third-party id
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#
#          // return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#
#             var nameRegExp = new RegExp( "^("+ nameVarTARGET +")(([-])(SUC|ERR)[0-9]{1}([-]"+ nowMs +"))?$" );
#             return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
#    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
#    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
#    And print '******** nameTARGET          = '+ nameTARGET
#    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
#    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
#    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
#    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
#    And print '================================\n'
#    And print '\n'
#
#
## CONSTRUCT json object array for passing to called feature routine
#    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
#    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
#    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
#    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
#    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
#    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
#    And print '================================'
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE: retrieve TARGET third-party by id
##
#
#    * def retrieveResult =    call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
##
##    * def phoneNumbersCount = retrieveResult[0].response.data.contactInformation.phoneNumber.length
##    * def faxesCount =        retrieveResult[0].response.data.contactInformation.fax.length
##    * def websitesCount =     retrieveResult[0].response.data.contactInformation.website.length
##    * def emailsCount =       retrieveResult[0].response.data.contactInformation.email.length
##
##    And match phoneNumbersCount == VALIDATECOUNT
##    And match faxesCount ==        VALIDATECOUNT
##    And match websitesCount ==     VALIDATECOUNT
##    And match emailsCount ==       VALIDATECOUNT
##
##    And print '\n'
##    And print '======== VALIDATE ================================'
##    And print 'TEST phoneNumbers:  COUNT =', phoneNumbersCount
##    And print 'TEST faxesCount:    COUNT =', faxesCount
##    And print 'TEST websitesCount: COUNT =', websitesCount
##    And print 'TEST emailsCount:   COUNT =', emailsCount
##    And print 'VALIDATE COUNT :    MATCH =', (phoneNumbersCount==VALIDATECOUNT && faxesCount==VALIDATECOUNT && websitesCount==VALIDATECOUNT && emailsCount==VALIDATECOUNT)
##    And print '==================================================\n'
##    And print '\n'
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 45) C37922116 Third-party - ADD
#                - Create third-party with different custom field types
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 11) ADD W CUSTOM FIELDS SUCCESS'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+18001      |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|CF01    |ADD CUST FLDS-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987           |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+18001111111|www.test01.com|111|email01@test.com|Test desc01|                   |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOMFLD VAL1     \n"
#    * def csvRows02 = "           |                        |                |CF01    |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                   |            |                   |                  |Number field               |1234567890              \n"
#    * def csvRows03 = "           |                        |                |CF01    |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                   |            |                   |                  |Date custom field          |"+ nowMs +"           \n"
#    * def csvRows04 = "           |                        |                |CF01    |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                   |            |                   |                  |Commodity type singleselect|3PL Services            \n"
#    * def csvRows05 = "           |                        |                |CF01    |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                   |            |                   |                  |Risk tier singleselect     |Low Risk                \n"
#    * def csvRows06 = "           |                        |                |CF01    |                        |            |        |                 |             |                 |                     |       |                |           |                    |          |              |              |               |                |             |                       |                    |              |           |                 |           |         |           |             |            |              |      |        |               |             |            |              |   |                |           |                   |            |                   |                  |TESTING                    |Southern Asia           \n"
#
#    * def csvRowsT = csvRows00 + csvRows01 + csvRows02 + csvRows03 + csvRows04 + csvRows05 + csvRows06
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
##
## CHECK: Get third-parties LIST for this day
##
#
#    Given url getUrl = baseTestUrl
#    And path 'thirdparty'
#    And param pageSize =       400
#    And param start =          nowStartISODate4
#    And param end =            nowEndISODate4
#    And header X-Tenant-Code = xTenantCode
#    And header Authorization = 'Bearer '+ accessToken
#    When method GET
#    Then status 200
#
#
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
#    * def nameVarTARGET =       'ADD CUST FLDS'
#    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#    * def VALIDATECOUNT =       10
#
#    * def dataArr =             get response.data[*]
#    * def thirdPartyIdsACTIVE = get response.data[*].id
#    * def count =               response.data.length
#
#    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
##    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
#    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
#    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
#    * def countNAME =           thirdPartyIdsNAME.length
#
##    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
#    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
#
## Get TARGET third-party id
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#        }
#      """
#    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
#    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
#
#    And print '\n'
#    And print '================================'
#    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
#    And print '******** COUNT: data.length  = '+ count
#    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
#    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
#    And print '******** nameTARGET          = '+ nameTARGET
#    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
#    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
#    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
#    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
#    And print '================================\n'
#    And print '\n'
#
#
## CONSTRUCT json object array for passing to called feature routine
#    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
#    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
#    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
#    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '================================'
#    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
#    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
#    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
#    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
#    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
#    And print '================================'
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE: retrieve TARGET third-party by id
##
#
#    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
#
##    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
##
##    And match otherNamesCount == VALIDATECOUNT
##
##    And print '\n'
##    And print '======== VALIDATE ================================'
##    And print 'TEST otherNames:    COUNT =', otherNamesCount
##    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
##    And print '==================================================\n'
##    And print '\n'
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 46) C37786657 Third-party - ADD
#                - Verify error for Invalid Action Type
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 12) INVALID ACTION TYPE ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "XXXXXXXXXX |                        |                |HDSF3   |ADD Invalid Action Type |            |        |                 |             |                 |02/22/1987            |       |11/02/1998      |           |si_admin@yopmail.com|MyDivision|Default       |              |               |                |             |                       |                    |              |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+18001111111|www.test1.com |111|test1@test.ph   |Desc abc123|                   |Acme01 Inc. |                   |                  |                           |                        \n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
###
### CHECK: Get third-parties LIST for this day
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##
##
##
###
### FILTER third-parties for TARGET third-party id VALIDATION & DELETION
###
##
##    * def nameVarTARGET =       'ADD CUST FLDS'
##    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
##    * def VALIDATECOUNT =       10
##
##    * def dataArr =             get response.data[*]
##    * def thirdPartyIdsACTIVE = get response.data[*].id
##    * def count =               response.data.length
##
##    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
##    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
##
##    * def filterByNameStatusFn =
##      """
##        function( dataElem ) {
##          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
##          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
##        }
##      """
###    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
##    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
##    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
##    * def countNAME =           thirdPartyIdsNAME.length
##
###    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
##    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
##
### Get TARGET third-party id
##    * def filterByExactNameFn =
##      """
##        function( dataElem ) {
##          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
##        }
##      """
##    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
##    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
##    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
##    And print '******** nameTARGET          = '+ nameTARGET
##    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
##    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
##    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
##    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
##    And print '================================\n'
##    And print '\n'
##
##
### CONSTRUCT json object array for passing to called feature routine
##    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
##    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
##    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
##    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
##
##    And print '\n'
##    And print '================================'
##    And print '================================'
##    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
##    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
##    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
##    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
##    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
##    And print '================================'
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE: retrieve TARGET third-party by id
###
##
##    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
##
###    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
###
###    And match otherNamesCount == VALIDATECOUNT
###
###    And print '\n'
###    And print '======== VALIDATE ================================'
###    And print 'TEST otherNames:    COUNT =', otherNamesCount
###    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
###    And print '==================================================\n'
###    And print '\n'
##
##
###
### DELETE: cleanup TARGET third-party by id
###
##
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 47) C37786659 Third-party - ADD
#                - Verify error for Maximum length exceeded
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 13) EXCEED MAX LENGTH ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD        |                        |RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|AAAefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500sLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s||||||||||si_admin@yopmail.com|MyDivision|Default||||||||RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|Philippines|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|Asia|RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111RefREf111Re|Philippines|76547645874658768-54365346547547547754876547645874658768-5436534654754754775|www.websitewebsitewebsitewebsitewebsitewebsitewebsitewebsitewebsitewebsite1.com|76547645874658768-54365346547547547754876547645874658768-5436534654754754775|websitewebsitewebsitewebsitewebsitewebsitewebsitewebsitewebsitewebsite1@si.com|Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500sLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s||Lorem Ipsum is simply dummy text of the printing and typesetting industry|Local Language Name|Philippines|Field1|Lorem Ipsum is simply dummy text of the printing and typesetting industryLorem Ipsum is simply dummy text of the printing and typesetting industryLorem Ipsum is simply dummy text of the printing and typesetting industry\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
##   * pauseExecution( 60000 )
#
#
###
### CHECK: Get third-parties LIST for this day
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##
##
##
###
### FILTER third-parties for TARGET third-party id VALIDATION & DELETION
###
##
##    * def nameVarTARGET =       'ADD CUST FLDS'
##    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
##    * def VALIDATECOUNT =       10
##
##    * def dataArr =             get response.data[*]
##    * def thirdPartyIdsACTIVE = get response.data[*].id
##    * def count =               response.data.length
##
##    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
##    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
##
##    * def filterByNameStatusFn =
##      """
##        function( dataElem ) {
##          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
##          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
##        }
##      """
###    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
##    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
##    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
##    * def countNAME =           thirdPartyIdsNAME.length
##
###    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
##    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
##
### Get TARGET third-party id
##    * def filterByExactNameFn =
##      """
##        function( dataElem ) {
##          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
##        }
##      """
##    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
##    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: DELETE THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
##    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
##    And print '******** nameTARGET          = '+ nameTARGET
##    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
##    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
##    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
##    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
##    And print '================================\n'
##    And print '\n'
##
##
### CONSTRUCT json object array for passing to called feature routine
##    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
##    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
##    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
##    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
##
##    And print '\n'
##    And print '================================'
##    And print '================================'
##    And print '******** SELF-SERVICE: DELETE THIRD-PARTY LIST'
##    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
##    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
##    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
##    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
##    And print '================================'
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE: retrieve TARGET third-party by id
###
##
##    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
##
###    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
###
###    And match otherNamesCount == VALIDATECOUNT
###
###    And print '\n'
###    And print '======== VALIDATE ================================'
###    And print 'TEST otherNames:    COUNT =', otherNamesCount
###    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
###    And print '==================================================\n'
###    And print '\n'
##
##
###
### DELETE: cleanup TARGET third-party by id
###
##
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
#
#
#
#  Scenario: 48) C37786660 Third-party - ADD
#                - Verify error for Reference Number that already exists
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 14) DUPLICATE REF. NO. ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## SELF-SERVICE ADD third-party: by BULK-UPLOAD
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    * def createSelfServiceBulkThirdParty0 = call read( "./call/createSelfServiceBulkThirdParty.feature" )   { "csvRowsT": "#(csvRowsT)", "processType": "THIRD_PARTY_ADD_EDIT_DELETE" }
#
##    And print 'createSelfServiceBulkThirdParty0 = \n', createSelfServiceBulkThirdParty0
#    * def createSelfServiceBulkThirdParty0_response =  createSelfServiceBulkThirdParty0.response
#    * def processId0 =                                  createSelfServiceBulkThirdParty0_response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE'
#    And print '******** PROCESS ID     = '+ processId0
#    And print '================================\n'
#    And print '\n'
#
#
##
## Retrieve PROCESS DETAILS by id
##
#
#    * def retrieveSelfServiceProcess0 =          call read( "./call/retrieveSelfServiceBulkThirdPartyProcessDetailsById.feature" )   { "processId": "#(processId0)" }
#
#    * def retrieveSelfServiceProcess0_response = retrieveSelfServiceProcess0.response
##    And print "retrieveSelfServiceProcess0_response =\n", retrieveSelfServiceProcess0_response
#    * def status0 =                              retrieveSelfServiceProcess0_response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId0
#    And print '******** STATUS         = '+ status0
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA: SUCCESS
##
#    And match retrieveSelfServiceProcess0_response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "errorResponseFile":   null,
#                             "numberOfRecords":     1,
#                             "recordProcessed":     1,
#                             "recordWithErrors":    0,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "##string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#    * def validateSuccess0 = ( retrieveSelfServiceProcess0_response.data.recordProcessed==1 && retrieveSelfServiceProcess0_response.data.recordWithErrors==0 )
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** PROCESS ID       = '+ processId0
#    And print '******** STATUS           = '+ status0
#    And print '******** VALIDATE Success = '+ validateSuccess0
#    And print '================================\n'
#    And print '\n'
#
#    * match validateSuccess0 == true
#
#
##
## RETRIEVE third-party LIST for today
##
#
#    * def retrieveThirdPartyListResult0 = call read( "./call/retrieveThirdPartyListForToday.feature" )   { "pageSize": 100, "start": "#(nowStartISODate4)", "end": "#(nowEndISODate4)" }
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
#    * def nameVarTARGET =       'DUPL REFNO-0'
#    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
#
#
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#        }
#      """
#
##    And print "retrieveThirdPartyListResult0 = \n", retrieveThirdPartyListResult0
#
#    * def thirdPartyArrTODAYACTIVE =     get retrieveThirdPartyListResult0.response.data[*]
#    * def thirdPartyIdsTODAYACTIVE =     get retrieveThirdPartyListResult0.response.data[*].id
#
#    * def thirdPartyArrTODAYNEW =        $retrieveThirdPartyListResult0.response.data[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsTODAYNEW =        get thirdPartyArrTODAYNEW[*].id
#
#    * def thirdPartyArrTODAYNAME =       karate.filter( thirdPartyArrTODAYACTIVE, filterByNameStatusFn )
#    * def thirdPartyIdsTODAYNAME =       get thirdPartyArrTODAYNAME[*].id
#
#    * def thirdPartyArrTODAYTARGET =     karate.filter( thirdPartyArrTODAYNEW, filterByExactNameFn )
#    * def thirdPartyIdsTODAYTARGET =     get thirdPartyArrTODAYTARGET[*].id
#
#    * def thirdPartyIdsTODAYNAMEArr =    call createThirdPartyIdsArrFn thirdPartyIdsTODAYNAME
#    * def thirdPartyIdsTODAYTARGETArr =  call createThirdPartyIdsArrFn thirdPartyIdsTODAYTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '******** RETRIEVE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** thirdPartyArrTODAYACTIVE       = '+ thirdPartyArrTODAYACTIVE.length    +': '+ thirdPartyArrTODAYACTIVE
#    And print '******** thirdPartyIdsTODAYACTIVE       = '+ thirdPartyIdsTODAYACTIVE.length    +': '+ thirdPartyIdsTODAYACTIVE
#    And print '******** thirdPartyArrTODAYNEW          = '+ thirdPartyArrTODAYNEW.length       +': '+ thirdPartyArrTODAYNEW
#    And print '******** thirdPartyIdsTODAYNEW          = '+ thirdPartyIdsTODAYNEW.length       +': '+ thirdPartyIdsTODAYNEW
#    And print '******** thirdPartyArrTODAYNAME         = '+ thirdPartyArrTODAYNAME.length      +': '+ thirdPartyArrTODAYNAME
#    And print '******** thirdPartyIdsTODAYNAME         = '+ thirdPartyIdsTODAYNAME.length      +': '+ thirdPartyIdsTODAYNAME
#    And print '******** thirdPartyArrTODAYTARGET       = '+ thirdPartyArrTODAYTARGET.length    +': '+ thirdPartyArrTODAYTARGET
#    And print '******** thirdPartyIdsTODAYTARGET       = '+ thirdPartyIdsTODAYTARGET.length    +': '+ thirdPartyIdsTODAYTARGET
#    And print '******** '
#    And print '******** thirdPartyIdsTODAYNAMEArr      = '+ thirdPartyIdsTODAYNAMEArr.length   +': '+ thirdPartyIdsTODAYNAMEArr
#    And print '******** thirdPartyIdsTODAYTARGETArr    = '+ thirdPartyIdsTODAYTARGETArr.length +': '+ thirdPartyIdsTODAYTARGETArr
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE: retrieve TARGET third-party by id
##
#
##    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" )   { "thirdPartyId": "#(thirdPartyIdsTODAYTARGET[0])" }
#    * def retrieveThirdPartyByIdResult0 =       call read( "./call/retrieveThirdPartyById.feature" )   thirdPartyIdsTODAYTARGETArr
#
##    And print 'retrieveThirdPartyByIdResult0 = \n',          retrieveThirdPartyByIdResult0
##    And print 'retrieveThirdPartyByIdResult0_count = ',      retrieveThirdPartyByIdResult0.length
##    And print 'retrieveThirdPartyByIdResult0_response = \n', retrieveThirdPartyByIdResult0[0].response
#
##    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
##
##    And match otherNamesCount == VALIDATECOUNT
##
##    And print '\n'
##    And print '======== VALIDATE ================================'
##    And print 'TEST otherNames:    COUNT =', otherNamesCount
##    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
##    And print '==================================================\n'
##    And print '\n'
#
#
## ================================================================================
## ================================================================================
##
## SELF-SERVICE ADD third-party: by BULK-UPLOAD
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    * def createSelfServiceBulkThirdParty1 = call read( "./call/createSelfServiceBulkThirdParty.feature" )   { "csvRowsT": "#(csvRowsT)", "processType": "THIRD_PARTY_ADD_EDIT_DELETE" }
#
##    And print 'createSelfServiceBulkThirdParty0 = \n', createSelfServiceBulkThirdParty0
#    * def createSelfServiceBulkThirdParty1_response =  createSelfServiceBulkThirdParty1.response
#    * def processId1 =                                 createSelfServiceBulkThirdParty1_response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE'
#    And print '******** PROCESS ID     = '+ processId1
#    And print '================================\n'
#    And print '\n'
#
#
##
## Retrieve PROCESS DETAILS by id
##
#
#    * def retrieveSelfServiceProcess1 =          call read( "./call/retrieveSelfServiceBulkThirdPartyProcessDetailsById.feature" )   { "processId": "#(processId1)" }
#
#    * def retrieveSelfServiceProcess1_response = retrieveSelfServiceProcess1.response
##    And print "retrieveSelfServiceProcess1_response =\n", retrieveSelfServiceProcess1_response
#    * def status1 =                              retrieveSelfServiceProcess1_response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId1
#    And print '******** STATUS         = '+ status1
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA: ERROR
##
#    And match retrieveSelfServiceProcess1_response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "##string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#    * def validateError1 = ( retrieveSelfServiceProcess1_response.data.recordProcessed==0 && retrieveSelfServiceProcess1_response.data.recordWithErrors==1 )
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** PROCESS ID     = '+ processId1
#    And print '******** STATUS         = '+ status1
#    And print '******** VALIDATE Error = '+ validateError1
#    And print '================================\n'
#    And print '\n'
#
#    * match validateError1 == true
## ================================================================================
## ================================================================================
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYNAMEArr
#    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYTARGETArr
#
#
## ================================================================================
## ================================================================================
## ================================================================================
## ================================================================================
#
##
## CREATE: Create third-party
##
#
#    * def nowMs = call fnGetNowMs
#
#    * def nameVarTARGET =       'DUPL REFNO-0'
#    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#
#    * def requestBody_createThirdParty3 =
#      """
#          {
#            "referenceNo": "#(''+ nowMs)",
#            "name": "#(nameVarTARGET +'-'+ nowMs)",
#            "currency": "USD",
#            "companyType": "CORP",
#            "industryType": "AHI",
#            "organizationSize": "11-50",
#            "businessType": "PRS",
#            "incorporationDate": "2021-06-18T05:32:07-0800",
#            "revenue": "10M",
#            "responsibleParty": "si_admin@yopmail.com",
#            "liquidationDate": "2021-06-18T05:32:07-0800",
#            "divisions": [
#              "MyDivision"
#            ],
#            "affiliation": "SOE",
#            "workflowGroupId": "#(workflowGroupId)",
#            "spendCategory": "OTS",
#            "sourcingMethod": "DIST_M_SRC",
#            "productDesignAgreement": "OTS",
#            "sourcingType": "MULTI",
#            "relationshipVisibility": "LITTLE_VIS",
#            "productImpact": "COMMODITIZED_PRODUCT",
#            "commodityType": "A3P",
#            "address": {
#              "addressLine": "Address Line 1",
#              "city": "City 1",
#              "country": "US",
#              "postalCode": "31080",
#              "province": "Province 1",
#              "region": "#(region)"
#            },
#            "contactInformation": {
#              "email": [
#                "john.smith@company1.com"
#              ],
#              "fax": [
#                "+91 (123) 456-7890"
#              ],
#              "phoneNumber": [
#                "(123) 456-7890"
#              ],
#              "website": [
#                "http://www.company1.com"
#              ]
#            },
#            "description": "This is supplier description",
#            "customFields": [],
#            "bankDetails": [
#              {
#                "accountNo": "111-11111111-1",
#                "addressLine": "Address 1",
#                "branchName": "Branch Name",
#                "city": "City 1",
#                "country": "US",
#                "name": "Bank Name"
#              }
#            ],
#            "otherNames": [
#            ]
#          }
#      """
#
#    * def createThirdPartyResult3 = call read( "./call/createThirdParty.feature" ) { "requestBody_createThirdParty": '#(requestBody_createThirdParty3)' }
#    * def thirdPartyId3 =           createThirdPartyResult3.response.data.id
##    * def thirdPartyIds3 =         get createThirdPartyResult3.response.data.id
#
#
#    * def thirdPartyIds3Arr =       call createThirdPartyIdsArrFn [ '#(thirdPartyId3)' ]
#
#    And print '\n'
#    And print '================================'
#    And print '******** thirdPartyId3     = '+ thirdPartyId3
##    And print '******** thirdPartyIds3    = '+ thirdPartyIds3
#    And print '******** thirdPartyIds3Arr = '+ thirdPartyIds3Arr
#    And print '================================\n'
#    And print '\n'
#
#
##
## RETRIEVE third-party LIST for today
##
#
#    * def retrieveThirdPartyListResult3 = call read( "./call/retrieveThirdPartyListForToday.feature" )   { "pageSize": 100, "start": "#(nowStartISODate4)", "end": "#(nowEndISODate4)" }
#
#
##
## FILTER third-parties for TARGET third-party id VALIDATION & DELETION
##
#
##    * def nameVarTARGET =       'DUPL REFNO-0'
##    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
#
#    * def filterByNameStatusFn =
#      """
#        function( dataElem ) {
#          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
#          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
#        }
#      """
#
#
#    * def filterByExactNameFn =
#      """
#        function( dataElem ) {
#          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
#        }
#      """
#
##    And print "retrieveThirdPartyListResult0 = \n", retrieveThirdPartyListResult0
#
#    * def thirdPartyArrTODAYACTIVE =     get retrieveThirdPartyListResult3.response.data[*]
#    * def thirdPartyIdsTODAYACTIVE =     get retrieveThirdPartyListResult3.response.data[*].id
#
#    * def thirdPartyArrTODAYNEW =        $retrieveThirdPartyListResult3.response.data[ ?(@.status=='NEW') ]
#    * def thirdPartyIdsTODAYNEW =        get thirdPartyArrTODAYNEW[*].id
#
#    * def thirdPartyArrTODAYNAME =       karate.filter( thirdPartyArrTODAYACTIVE, filterByNameStatusFn )
#    * def thirdPartyIdsTODAYNAME =       get thirdPartyArrTODAYNAME[*].id
#
#    * def thirdPartyArrTODAYTARGET =     karate.filter( thirdPartyArrTODAYNEW, filterByExactNameFn )
#    * def thirdPartyIdsTODAYTARGET =     get thirdPartyArrTODAYTARGET[*].id
#
#    * def thirdPartyIdsTODAYNAMEArr =    call createThirdPartyIdsArrFn thirdPartyIdsTODAYNAME
#    * def thirdPartyIdsTODAYTARGETArr =  call createThirdPartyIdsArrFn thirdPartyIdsTODAYTARGET
#
#    And print '\n'
#    And print '================================'
#    And print '******** RETRIEVE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
#    And print '******** thirdPartyArrTODAYACTIVE       = '+ thirdPartyArrTODAYACTIVE.length    +': '+ thirdPartyArrTODAYACTIVE
#    And print '******** thirdPartyIdsTODAYACTIVE       = '+ thirdPartyIdsTODAYACTIVE.length    +': '+ thirdPartyIdsTODAYACTIVE
#    And print '******** thirdPartyArrTODAYNEW          = '+ thirdPartyArrTODAYNEW.length       +': '+ thirdPartyArrTODAYNEW
#    And print '******** thirdPartyIdsTODAYNEW          = '+ thirdPartyIdsTODAYNEW.length       +': '+ thirdPartyIdsTODAYNEW
#    And print '******** thirdPartyArrTODAYNAME         = '+ thirdPartyArrTODAYNAME.length      +': '+ thirdPartyArrTODAYNAME
#    And print '******** thirdPartyIdsTODAYNAME         = '+ thirdPartyIdsTODAYNAME.length      +': '+ thirdPartyIdsTODAYNAME
#    And print '******** thirdPartyArrTODAYTARGET       = '+ thirdPartyArrTODAYTARGET.length    +': '+ thirdPartyArrTODAYTARGET
#    And print '******** thirdPartyIdsTODAYTARGET       = '+ thirdPartyIdsTODAYTARGET.length    +': '+ thirdPartyIdsTODAYTARGET
#    And print '******** '
#    And print '******** thirdPartyIdsTODAYNAMEArr      = '+ thirdPartyIdsTODAYNAMEArr.length   +': '+ thirdPartyIdsTODAYNAMEArr
#    And print '******** thirdPartyIdsTODAYTARGETArr    = '+ thirdPartyIdsTODAYTARGETArr.length +': '+ thirdPartyIdsTODAYTARGETArr
#    And print '================================\n'
#    And print '\n'
#
#
#
##
## VALIDATE: RETRIEVE TARGET third-party by id
##
#
##    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" )   { "thirdPartyId": "#(thirdPartyIdsTODAYTARGET[0])" }
#    * def retrieveThirdPartyByIdResult3 =       call read( "./call/retrieveThirdPartyById.feature" )   thirdPartyIdsTODAYTARGETArr
#
##    And print 'retrieveThirdPartyByIdResult0 = \n',          retrieveThirdPartyByIdResult0
##    And print 'retrieveThirdPartyByIdResult0_count = ',      retrieveThirdPartyByIdResult0.length
##    And print 'retrieveThirdPartyByIdResult0_response = \n', retrieveThirdPartyByIdResult0[0].response
#
##    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
##
##    And match otherNamesCount == VALIDATECOUNT
##
##    And print '\n'
##    And print '======== VALIDATE ================================'
##    And print 'TEST otherNames:    COUNT =', otherNamesCount
##    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
##    And print '==================================================\n'
##    And print '\n'
#
#
#
#
## ================================================================================
## ================================================================================
##
## SELF-SERVICE ADD third-party: by BULK-UPLOAD
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    * def createSelfServiceBulkThirdParty4 = call read( "./call/createSelfServiceBulkThirdParty.feature" )   { "csvRowsT": "#(csvRowsT)", "processType": "THIRD_PARTY_ADD_EDIT_DELETE" }
#
##    And print 'createSelfServiceBulkThirdParty0 = \n', createSelfServiceBulkThirdParty0
#    * def createSelfServiceBulkThirdParty4_response =  createSelfServiceBulkThirdParty4.response
#    * def processId4 =                                 createSelfServiceBulkThirdParty4_response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE'
#    And print '******** PROCESS ID     = '+ processId4
#    And print '================================\n'
#    And print '\n'
#
#
##
## Retrieve PROCESS DETAILS by id
##
#
#    * def retrieveSelfServiceProcess4 =          call read( "./call/retrieveSelfServiceBulkThirdPartyProcessDetailsById.feature" )   { "processId": "#(processId4)" }
#
#    * def retrieveSelfServiceProcess4_response = retrieveSelfServiceProcess4.response
##    And print "retrieveSelfServiceProcess1_response =\n", retrieveSelfServiceProcess1_response
#    * def status4 =                              retrieveSelfServiceProcess4_response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId4
#    And print '******** STATUS         = '+ status4
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA: ERROR
##
#    And match retrieveSelfServiceProcess4_response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "##string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#    * def validateError4 = ( retrieveSelfServiceProcess4_response.data.recordProcessed==0 && retrieveSelfServiceProcess1_response.data.recordWithErrors==1 )
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD CSV FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** PROCESS ID     = '+ processId4
#    And print '******** STATUS         = '+ status4
#    And print '******** VALIDATE Error = '+ validateError4
#    And print '================================\n'
#    And print '\n'
#
#    * match validateError4 == true
## ================================================================================
## ================================================================================
#
#
##
## DELETE: cleanup TARGET third-party by id
##
#
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYNEWArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYNAMEArr
#    * def deleteResult4 = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYTARGETArr
#
#
#
#
#
##################################################################################################
##
##    * def nowMs = call fnGetNowMs
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 14) DUPLICATE REF. NO. ERROR'
##    And print '******** nowMs = '+ nowMs
##    And print '================================\n'
##    And print '\n'
##
##
###
### ADD third-party: by BULK-UPLOAD
###
##
###   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##
### Success: ADD thirdParty
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
##    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
##
##    * def csvRowsT = csvRows00 + csvRows01
##
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
### PAUSE to allow for server processing of file attachment
##    * pauseExecution( 1000 )
##
##
###
### SELF-SERVICE: CREATE BULK Third-Party
###
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
###    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
###    Then print response
###    Then print "RESPONSE = \n"+ response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "errorResponseFile":   null,
##                             "numberOfRecords":     1,
##                             "recordProcessed":     1,
##                             "recordWithErrors":    0,
##                             "entityType":          "##string",
##                             "entityId":            "##string",
##                             "childReferenceId":    "##string",
##                             "triggeredBy":         "##string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """
##
##
###   * pauseExecution( 60000 )
##
##
###
### CHECK: Get third-parties LIST for this day
###
##
##    Given url getUrl = baseTestUrl
##    And path 'thirdparty'
##    And param pageSize =       400
##    And param start =          nowStartISODate4
##    And param end =            nowEndISODate4
##    And header X-Tenant-Code = xTenantCode
##    And header Authorization = 'Bearer '+ accessToken
##    When method GET
##    Then status 200
##
##
###
### FILTER third-parties for TARGET third-party id VALIDATION & DELETION
###
##
##    * def nameVarTARGET =       'DUPL REFNO-0'
##    * def nameTARGET =          nameVarTARGET +'-'+ nowMs
###    * def VALIDATECOUNT =       10
##
##    * def dataArr =             get response.data[*]
##    * def count =               response.data.length
##    * def thirdPartyIdsACTIVE = get response.data[*].id
##
##    * def dataArrNEW =          $dataArr[ ?(@.status=='NEW') ]
##    * def thirdPartyIdsNEW =    get dataArrNEW[*].id
##
##    * def filterByNameStatusFn =
##      """
##        function( dataElem ) {
##          var nameRegExp = new RegExp( "^("+ nameVarTARGET +")([-][0-9]{13})?$" );
##          return ( dataElem.status=='NEW' && nameRegExp.test(dataElem.name) );
##        }
##      """
###    * def dataArrNAME =         $dataArr[ ?(@.name=='#(nameVarTARGET)') ]
##    * def dataArrNAME =         karate.filter( dataArr, filterByNameStatusFn )
##    * def countNAME =           dataArrNAME.length
##    * def thirdPartyIdsNAME =   get dataArrNAME[*].id
##
###    * def thirdPartyIdCREATED = thirdPartyIdsACTIVE[ count - 1 ]
##    * def thirdPartyIdCREATED = thirdPartyIdsNAME[ countNAME - 1 ]
##
### Get TARGET third-party id
##    * def filterByExactNameFn =
##      """
##        function( dataElem ) {
##          return ( dataElem.status=='NEW' && dataElem.name==(nameVarTARGET +'-'+ nowMs) );
##        }
##      """
##    * def dataArrTARGET =       karate.filter( dataArr, filterByExactNameFn )
##    * def thirdPartyIdsTARGET = get dataArrTARGET[*].id
##
##    And print '\n'
##    And print '================================'
##    And print '******** CREATE THIRD-PARTY: THIRD-PARTY LIST'
##    And print '******** COUNT: data.length  = '+ count
##    And print '******** thirdPartyIdsACTIVE = '+ thirdPartyIdsACTIVE.length +': '+ thirdPartyIdsACTIVE
##    And print '******** thirdPartyIdsNEW    = '+ thirdPartyIdsNEW.length    +': '+ thirdPartyIdsNEW
##    And print '******** nameTARGET          = "'+ nameTARGET +'"'
##    And print '******** thirdPartyIdsNAME   = '+ thirdPartyIdsNAME.length   +': '+ thirdPartyIdsNAME
##    And print '******** dataArrTARGET       = '+ dataArrTARGET.length       +': '+ dataArrTARGET
##    And print '******** thirdPartyIdsTARGET = '+ thirdPartyIdsTARGET.length +': '+ thirdPartyIdsTARGET
##    And print '******** thirdPartyIdCREATED = "'+ thirdPartyIdCREATED +'"'
##    And print '================================\n'
##    And print '\n'
##
##
### CONSTRUCT json object array for passing to called feature routine
##    * def thirdPartyIdsACTIVEArr = call createThirdPartyIdsArrFn thirdPartyIdsACTIVE
##    * def thirdPartyIdsNEWArr =    call createThirdPartyIdsArrFn thirdPartyIdsNEW
##    * def thirdPartyIdsNAMEArr =   call createThirdPartyIdsArrFn thirdPartyIdsNAME
##    * def thirdPartyIdsTARGETArr = call createThirdPartyIdsArrFn thirdPartyIdsTARGET
##
##    And print '\n'
##    And print '================================'
##    And print '================================'
##    And print '******** SELF-SERVICE: THIRD-PARTY LIST: FOR DELETE'
##    And print '******** thirdPartyIdsACTIVEArr = '+ thirdPartyIdsACTIVEArr.length +': '+ thirdPartyIdsACTIVEArr
##    And print '******** thirdPartyIdsNEWArr    = '+ thirdPartyIdsNEWArr.length    +': '+ thirdPartyIdsNEWArr
##    And print '******** thirdPartyIdsNAMEArr   = '+ thirdPartyIdsNAMEArr.length   +': '+ thirdPartyIdsNAMEArr
##    And print '******** thirdPartyIdsTARGETArr = '+ thirdPartyIdsTARGETArr.length +': '+ thirdPartyIdsTARGETArr
##    And print '================================'
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE: retrieve TARGET third-party by id
###
##
##    * def retrieveResult =       call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIdsTARGETArr
##
####    * def otherNamesCount =      retrieveResult[0].response.data.otherNames.length
####
####    And match otherNamesCount == VALIDATECOUNT
####
####    And print '\n'
####    And print '======== VALIDATE ================================'
####    And print 'TEST otherNames:    COUNT =', otherNamesCount
####    And print 'VALIDATE COUNT :    MATCH =', ( otherNamesCount==VALIDATECOUNT )
####    And print '==================================================\n'
####    And print '\n'
##
##
### ================================================================================
### ================================================================================
###
### ADD third-party: DUPLICATE REF. NO.
###
##
###   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##
### Success: ADD thirdParty
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
##    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
##
##    * def csvRowsT = csvRows00 + csvRows01
##
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
### PAUSE to allow for server processing of file attachment
##    * pauseExecution( 1000 )
##
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
###    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
###    Then print response
###    Then print "RESPONSE = \n"+ response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA: ERROR
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": null,
##                             "errorResponseFile":   {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "numberOfRecords":     1,
##                             "recordProcessed":     0,
##                             "recordWithErrors":    1,
##                             "entityType":          "##string",
##                             "entityId":            "##string",
##                             "childReferenceId":    "##string",
##                             "triggeredBy":         "#string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """
### ================================================================================
### ================================================================================
##
##
###
### DELETE: cleanup TARGET third-party by id
###
##
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
###    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
##    * def deleteResult = call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTARGETArr
##
##
### ================================================================================
### ================================================================================
### ================================================================================
##
###
### CREATE: Create third-party
###
##
##    * def nowMs = call fnGetNowMs
##
##    * def requestBody_createThirdParty =
##      """
##          {
##            "referenceNo": "#(''+ nowMs)",
##            "name": "#(nameVarTARGET +'-'+ nowMs)",
##            "currency": "USD",
##            "companyType": "CORP",
##            "industryType": "AHI",
##            "organizationSize": "11-50",
##            "businessType": "PRS",
##            "incorporationDate": "2021-06-18T05:32:07-0800",
##            "revenue": "10M",
##            "responsibleParty": "si_admin@yopmail.com",
##            "liquidationDate": "2021-06-18T05:32:07-0800",
##            "divisions": [
##              "MyDivision"
##            ],
##            "affiliation": "SOE",
##            "workflowGroupId": "#(workflowGroupId)",
##            "spendCategory": "OTS",
##            "sourcingMethod": "DIST_M_SRC",
##            "productDesignAgreement": "OTS",
##            "sourcingType": "MULTI",
##            "relationshipVisibility": "LITTLE_VIS",
##            "productImpact": "COMMODITIZED_PRODUCT",
##            "commodityType": "A3P",
##            "address": {
##              "addressLine": "Address Line 1",
##              "city": "City 1",
##              "country": "US",
##              "postalCode": "31080",
##              "province": "Province 1",
##              "region": "#(region)"
##            },
##            "contactInformation": {
##              "email": [
##                "john.smith@company1.com"
##              ],
##              "fax": [
##                "+91 (123) 456-7890"
##              ],
##              "phoneNumber": [
##                "(123) 456-7890"
##              ],
##              "website": [
##                "http://www.company1.com"
##              ]
##            },
##            "description": "This is supplier description",
##            "customFields": [],
##            "bankDetails": [
##              {
##                "accountNo": "111-11111111-1",
##                "addressLine": "Address 1",
##                "branchName": "Branch Name",
##                "city": "City 1",
##                "country": "US",
##                "name": "Bank Name"
##              }
##            ],
##            "otherNames": [
##            ]
##          }
##      """
##
##    * def createResult =      call read( "./call/createThirdParty.feature" ) { "requestBody_createThirdParty": '#(requestBody_createThirdParty)' }
##    * def thirdPartyId2 =     createResult.response.data.id
###    * def thirdPartyIds2 =   get createResult.response.data.id
##
##
##    * def thirdPartyIds2Arr = call createThirdPartyIdsArrFn [ '#(thirdPartyId2)' ]
##
##    And print '\n'
##    And print '================================'
##    And print '******** thirdPartyId2     = '+ thirdPartyId2
###    And print '******** thirdPartyIds2    = '+ thirdPartyIds2
##    And print '******** thirdPartyIds2Arr = '+ thirdPartyIds2Arr
##    And print '================================\n'
##    And print '\n'
##
##
###
### RETRIEVE third-party by id
###
##
##    * def retrieveResult2 =   call read( "./call/retrieveThirdPartyById.feature" ) thirdPartyIds2Arr
##
##
###
### RETRIEVE third-party LIST for today
###
##
##    * def retrieveListResult1 = call read( "./call/retrieveThirdPartyListForToday.feature" )
##
###    And print "retrieveListResult1 = \n", retrieveListResult1
##    * def thirdPartyArrTODAYACTIVE =     get retrieveListResult1.response.data[*]
##    * def thirdPartyIdsTODAYACTIVE =     get retrieveListResult1.response.data[*].id
##
##    * def thirdPartyArrTODAYNAME =       karate.filter( thirdPartyArrTODAYACTIVE, filterByNameStatusFn )
##    * def thirdPartyIdsTODAYNAME =       get thirdPartyArrTODAYNAME[*].id
##
##    * def thirdPartyIdsTODAYNAMEArr =    call createThirdPartyIdsArrFn thirdPartyIdsTODAYNAME
##
##    And print '\n'
##    And print '================================'
##    And print '******** RETRIEVE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
##    And print '******** thirdPartyArrTODAYACTIVE       = '+ thirdPartyArrTODAYACTIVE.length  +': '+ thirdPartyArrTODAYACTIVE
##    And print '******** thirdPartyIdsTODAYACTIVE       = '+ thirdPartyIdsTODAYACTIVE.length  +': '+ thirdPartyIdsTODAYACTIVE
##    And print '******** thirdPartyArrTODAYNAME         = '+ thirdPartyArrTODAYNAME.length    +': '+ thirdPartyArrTODAYNAME
##    And print '******** thirdPartyIdsTODAYNAME         = '+ thirdPartyIdsTODAYNAME.length    +': '+ thirdPartyIdsTODAYNAME
##    And print '******** thirdPartyIdsTODAYNAMEArr      = '+ thirdPartyIdsTODAYNAMEArr.length +': '+ thirdPartyIdsTODAYNAMEArr
##    And print '================================\n'
##    And print '\n'
##
##
### ================================================================================
### ================================================================================
###
### ADD third-party: DUPLICATE REF. NO.
###
##
###   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website       |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##
### Success: ADD thirdParty
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+180011     |www.test01.com|111|test01@test.com |Desc abc123|                    |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
##    * def csvRows01 = "ADD        |                        |"+    nowMs   +"|1       |DUPL REFNO-0-"+ nowMs+"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank01|11 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|11 Main Ave.|Ontario       |Ottawa|Americas|ZIP90210       |Canada       |+01800111111|www.test01.com|111|test01@test.com |Test desc01|                    |Acme01 Corp.|Local Language Name|France            |Field1                     |Test CUSTOM FLD VAL01   \n"
##
##    * def csvRowsT = csvRows00 + csvRows01
##
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
### PAUSE to allow for server processing of file attachment
##    * pauseExecution( 1000 )
##
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
###    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
###    Then print response
###    Then print "RESPONSE = \n"+ response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA: ERROR
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": null,
##                             "errorResponseFile":   {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "numberOfRecords":     1,
##                             "recordProcessed":     0,
##                             "recordWithErrors":    1,
##                             "entityType":          "##string",
##                             "entityId":            "##string",
##                             "childReferenceId":    "##string",
##                             "triggeredBy":         "#string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """
### ================================================================================
### ================================================================================
##
###
### DELETE third-party by id
###
##
###    * def deleteResult =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
###    * def deleteResult =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
##    * def deleteResult2 =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIds2Arr
##
##
##
### ================================================================================
### ================================================================================
##
###
### RETRIEVE third-party list for today
###
##
##    * def retrieveListResult =           call read( "./call/retrieveThirdPartyListForToday.feature" )
##
###    And print "retrieveListResult = \n", retrieveListResult
##    * def thirdPartyArrTODAYACTIVE =     get retrieveListResult.response.data[*]
##    * def thirdPartyIdsTODAYACTIVE =     get retrieveListResult.response.data[*].id
##
##    * def thirdPartyArrTODAYNAME =       karate.filter( thirdPartyArrTODAYACTIVE, filterByNameStatusFn )
##    * def thirdPartyIdsTODAYNAME =       get thirdPartyArrTODAYNAME[*].id
##
##    * def thirdPartyIdsTODAYNAMEArr =    call createThirdPartyIdsArrFn thirdPartyIdsTODAYNAME
##
##    And print '\n'
##    And print '================================'
##    And print '******** RETRIEVE THIRD-PARTY: RETRIEVE THIRD-PARTY LIST'
##    And print '******** thirdPartyArrTODAYACTIVE       = '+ thirdPartyArrTODAYACTIVE.length  +': '+ thirdPartyArrTODAYACTIVE
##    And print '******** thirdPartyIdsTODAYACTIVE       = '+ thirdPartyIdsTODAYACTIVE.length  +': '+ thirdPartyIdsTODAYACTIVE
##    And print '******** thirdPartyArrTODAYNAME         = '+ thirdPartyArrTODAYNAME.length    +': '+ thirdPartyArrTODAYNAME
##    And print '******** thirdPartyIdsTODAYNAME         = '+ thirdPartyIdsTODAYNAME.length    +': '+ thirdPartyIdsTODAYNAME
##    And print '******** thirdPartyIdsTODAYNAMEArr      = '+ thirdPartyIdsTODAYNAMEArr.length +': '+ thirdPartyIdsTODAYNAMEArr
##    And print '================================\n'
##    And print '\n'
##
##
###
### DELETE third-party by id
###
##
###    * def deleteResult =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNEWArr
###    * def deleteResult =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsNAMEArr
##    * def deleteResult3 =     call read( "./call/deleteThirdParty.feature" ) thirdPartyIdsTODAYNAMEArr
##################################################################################################




##################################################################################################
#  Scenario: 101) C37786672 Third-party - ADD
#            - Verify error for Region and Country - Invalid pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 01) REGION & COUNTRY PAIRING ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID REGION AND COUNTRY PAIRING||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||Americas||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 102) C37786662 Third-party - ADD
#                 - Verify error for Supplier Segmentation - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 02) SUPPLIER SEGMENTATION INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - Supplier Segmentation - Invalid Value||||||||||si_admin@yopmail.com|MyDivision|Default|dggg|gggg|gggg|gggg|gggg|ggg|gggg||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 103) C37786665 Third-party - ADD
#                 - Verify error for Contact - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 03) CONTACT INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - CONTACT - INVALID VALUES||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|ASDHHHG|ASTGGHH|GDSHDH|email1|||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 104) C37786663 Third-party - ADD
#                 - Verify error for Bank Country - Invalid value
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 04) BANK COUNTRY INVALID ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - BANK DETAILS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default||||||||BDO|QC|12312|QC|BDO QC|AAAAA||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 105) C37786664 Third-party - ADD
#                 - Verify error for Address - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 05) ADDRESS INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - ADDRESS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||AAAA||AAAAAAA|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 106) C37786666 Third-party - ADD
#                 - Verify error for Other Names - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 06) OTHER NAMES INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - OTHER NAME - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||TEST|GGAGGG|GGGGA||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 107) C37786667 Third-party - ADD
#                 - Verify error for Custom Fields - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 07) CUSTOM FIELDS INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - CUSTOM FIELDS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines||||||||||Cust Name invalid|Cust Value invalid\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """



##  Scenario: 108) C37786668 Third-party - ADD
##                 - Verify error for Missing fields
##
##    * def nowMs = call fnGetNowMs
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 08) MISSING FIELDS ERROR'
##    And print '******** nowMs = '+ nowMs
##    And print '================================\n'
##    And print '\n'
##
##
###
### ADD third-party
###
##
###   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
###    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website        |Fax|Email Address      |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##
### Success: ADD thirdParty
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test01.com |123|test1@test.ph      |Desc abc123|                   |Acme Inc.    |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
###    * def csvRows01 = "           |                        |                |        |MISSINGFLDS-"+  nowMs +"|            |        |                 |             |                 |02/22/1987            |       |11/02/1998      |           |                    |          |              |              |               |                |             |                       |                    |              |MoneyBank  |12 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|            |              |      |        |               |             |+18001111111|www.test01.com |111|email01@yopmail.com|           |                   |             |                   |                  |                           |                        \n"
##
### Error: Missing fields (columns): 'ACTION TYPE', 'GROUP ID', 'THIRD-PARTY NAME', 'RESPONSIBLE PARTY', 'DIVISION', 'WORKFLOW GROUP', 'COUNTRY', 'OTHER NAME TYPE'
###                                   -----------    --------    ----------------    -----------------    --------    --------------    -------    ---------------
###                                   -----------    --------    ----------------    -----------------    --------    --------------    -------    ---------------
##
##    * def csvRows00 = "            Third-party ID          |Reference Number                                  |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation                                               |Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact       |Commdity Type|Bank Name|Bank Address Line   |Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City  |Region|Zip/Postal Code                 |Phone Number|Website      |Fax|Email Address |Description  |Other Names Old Name|Other Name                     |Other Name Country|Custom Fields Name         |Custom Fields Value\n"
##    * def csvRows01 = "                                    |1011                                              |            |        |                 |             |                 |02/22/1987             |      |11/02/1998      |                                                          |              |               |                 |            |                       |                     |             |BDO      |QC                  |12312      |QC       |BDO QC     |Philippines |            |              |      |      |                                |234234      |www.test.com |111|test1@test.ph |             |                    |                               |                  |                           |                   \n"
##
###    * def csvRows00 = "Third-party ID|Reference Number|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commdity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Country|Custom Fields Name|Custom Fields Value\n"
###    * def csvRows01 = "|1011||||||02/22/1987||11/02/1998|||||||||BDO|QC|12312|QC|BDO QC|Philippines||||||234234|website1@si.com|234234|email1@refinitiv.com||||||\n"
##
##    * def csvRowsT = csvRows00 + csvRows01
##
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
### PAUSE to allow for server processing of file attachment
##    * pauseExecution( 1000 )
##
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
###    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
###    Then print response
###    Then print "RESPONSE = \n"+ response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": null,
##                             "errorResponseFile":   {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "numberOfRecords":     1,
##                             "recordProcessed":     0,
##                             "recordWithErrors":    1,
##                             "entityType":          "##string",
##                             "entityId":            "##string",
##                             "childReferenceId":    "##string",
##                             "triggeredBy":         "#string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """



#  Scenario: 109) C37786669 Third-party - ADD
#                 - Verify error for Business Category - No Industry Type provided
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 09) BUSINESS CAT. NO INDUSTRY TYPE ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - NO INDUSTRY TYPE PROVIDED|||||PRS|||||si_admin@yopmail.com|MyDivision|Default||||||||BDO|QC|12312|QC|BDO QC|Philippines||||||Philippines|234234|website1@si.com|234234|email1@refinitiv.com|||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 110) C37786670 Third-party - ADD
#                 - Verify error for Business Category - Invalid Industry Type pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 10) BUSINESS CAT. INDUSTRY TYPE INVALID PAIRING ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID BUSINESS CATEGORY AND INDUSTRY TYPE PAIRING||||AHI|MIL|02/22/1987||11/02/1998||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 111) C37786671 Third-party - ADD
#                 - Verify error for Invalid Date
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 11) INVALID DATE ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID DATE||||||22445/112/11||22435/112/11||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 112) C37786674 Third-party - ADD
#                 - Verify error for Incomplete Bank details
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 12) INCOMPLETE BANK DETAILS ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INCOMPLETE BANK DETAILS||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||QC||QC|BDO QC|Philippines||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 113) C37786661 Third-party - ADD
#                 - Verify error for General Information - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 13) GENERAL INFO. INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||11|Add - General Information - Invalid Value|HJHSS|4DSAS|khfdf3|jha|gasd||lll||ssssf|randomemail@test.com|Salesssss|ssssss|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
##################################################################################################





#  Scenario: 201) C37786672 Third-party - PARTUPDATE
#            - Verify error for Region and Country - Invalid pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 01) REGION & COUNTRY PAIRING ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID REGION AND COUNTRY PAIRING||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||Americas||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 202) C37786662 Third-party - PARTUPDATE
#                 - Verify error for Supplier Segmentation - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 02) SUPPLIER SEGMENTATION INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - Supplier Segmentation - Invalid Value||||||||||si_admin@yopmail.com|MyDivision|Default|dggg|gggg|gggg|gggg|gggg|ggg|gggg||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 203) C37786665 Third-party - PARTUPDATE
#                 - Verify error for Contact - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 03) CONTACT INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - CONTACT - INVALID VALUES||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|ASDHHHG|ASTGGHH|GDSHDH|email1|||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 204) C37786663 Third-party - PARTUPDATE
#                 - Verify error for Bank Country - Invalid value
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 04) BANK COUNTRY INVALID ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - BANK DETAILS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default||||||||BDO|QC|12312|QC|BDO QC|AAAAA||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 205) C37786664 Third-party - PARTUPDATE
#                 - Verify error for Address - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 05) ADDRESS INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - ADDRESS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||AAAA||AAAAAAA|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 206) C37786666 Third-party - PARTUPDATE
#                 - Verify error for Other Names - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 06) OTHER NAMES INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - OTHER NAME - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||TEST|GGAGGG|GGGGA||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 207) C37786667 Third-party - PARTUPDATE
#                 - Verify error for Custom Fields - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 07) CUSTOM FIELDS INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - CUSTOM FIELDS - INVALID VALUE||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines||||||||||Cust Name invalid|Cust Value invalid\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
##  Scenario: 208) C37786668 Third-party - PARTUPDATE
##                 - Verify error for Missing fields
##
##    * def nowMs = call fnGetNowMs
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 08) MISSING FIELDS ERROR'
##    And print '******** nowMs = '+ nowMs
##    And print '================================\n'
##    And print '\n'
##
##
###
### ADD third-party
###
##
###   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
###    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website        |Fax|Email Address      |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
##
### Success: ADD thirdParty
###   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test01.com |123|test1@test.ph      |Desc abc123|                   |Acme Inc.    |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
###    * def csvRows01 = "           |                        |                |        |MISSINGFLDS-"+  nowMs +"|            |        |                 |             |                 |02/22/1987            |       |11/02/1998      |           |                    |          |              |              |               |                |             |                       |                    |              |MoneyBank  |12 Finance Avenue|11111111   |Reno     |MB Reno Br.|United States|            |              |      |        |               |             |+18001111111|www.test01.com |111|email01@yopmail.com|           |                   |             |                   |                  |                           |                        \n"
##
### Error: Missing fields (columns): 'ACTION TYPE', 'GROUP ID', 'THIRD-PARTY NAME', 'RESPONSIBLE PARTY', 'DIVISION', 'WORKFLOW GROUP', 'COUNTRY', 'OTHER NAME TYPE'
###                                   -----------    --------    ----------------    -----------------    --------    --------------    -------    ---------------
###                                   -----------    --------    ----------------    -----------------    --------    --------------    -------    ---------------
##
##    * def csvRows00 = "            Third-party ID          |Reference Number                                  |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation                                               |Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact       |Commdity Type|Bank Name|Bank Address Line   |Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City  |Region|Zip/Postal Code                 |Phone Number|Website      |Fax|Email Address |Description  |Other Names Old Name|Other Name                     |Other Name Country|Custom Fields Name         |Custom Fields Value\n"
##    * def csvRows01 = "                                    |1011                                              |            |        |                 |             |                 |02/22/1987             |      |11/02/1998      |                                                          |              |               |                 |            |                       |                     |             |BDO      |QC                  |12312      |QC       |BDO QC     |Philippines |            |              |      |      |                                |234234      |www.test.com |111|test1@test.ph |             |                    |                               |                  |                           |                   \n"
##
###    * def csvRows00 = "Third-party ID|Reference Number|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commdity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Country|Custom Fields Name|Custom Fields Value\n"
###    * def csvRows01 = "|1011||||||02/22/1987||11/02/1998|||||||||BDO|QC|12312|QC|BDO QC|Philippines||||||234234|website1@si.com|234234|email1@refinitiv.com||||||\n"
##
##    * def csvRowsT = csvRows00 + csvRows01
##
###   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
##
###   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
##
### PAUSE to allow for server processing of file attachment
##    * pauseExecution( 1000 )
##
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice'
##    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
###   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
##    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##    When method POST
##    Then status 202
##
###    Then print response
##
##    * def processId = response.data.processId
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##              {
##                "message": '##string',
##                "data":    {
##                               "processId": '##string'
##                           }
##              }
##          """
##
##
### PAUSE to allow for server processing of file attachment
###
###   * pauseExecution( 30000 )
##
##
###
### Retrieve PROCESS ID details
###
##
##    Given url postUrl = baseTestUrl
##    And path 'selfservice', processId
##    And header X-Tenant-Code = xTenantCode
##    And header RequestorEmail = requestorEmail
##    And header Authorization = 'Bearer '+ accessToken
##
##    And retry until response.data.status == 'COMPLETED'
##    When method GET
##    Then status 200
##
###    Then print response
###    Then print "RESPONSE = \n"+ response
##
##    * def status = response.data.status
##
##    And print '\n'
##    And print '================================'
##    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
##    And print '******** nowMs          = '+ nowMs
##    And print '******** xTenantCode    = '+ xTenantCode
##    And print '******** requestorEmail = '+ requestorEmail
##    And print '******** PROCESS ID     = '+ processId
##    And print '******** STATUS         = '+ status
##    And print '================================\n'
##    And print '\n'
##
##
###
### VALIDATE response body SCHEMA
###
##    And match response ==
##          """
##            {
##              "message": "200(OK) The request was successful.",
##              "data":    {
##                             "processId":           "#string",
##                             "filename":            "#string",
##                             "meta":                {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
##                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
##                             "status":              "COMPLETED",
##                             "relatedFilesStatus":  null,
##                             "errors":              null,
##                             "successResponseFile": null,
##                             "errorResponseFile":   {
##                                                        "filename":  "#string",
##                                                        "fileSize":  "#number",
##                                                        "location":  "#string"
##                                                    },
##                             "numberOfRecords":     1,
##                             "recordProcessed":     0,
##                             "recordWithErrors":    1,
##                             "entityType":          "##string",
##                             "entityId":            "##string",
##                             "childReferenceId":    "##string",
##                             "triggeredBy":         "#string",
##                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
##                         }
##            }
##          """
#
#
#
#  Scenario: 209) C37786669 Third-party - PARTUPDATE
#                 - Verify error for Business Category - No Industry Type provided
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 09) BUSINESS CAT. NO INDUSTRY TYPE ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - NO INDUSTRY TYPE PROVIDED|||||PRS|||||si_admin@yopmail.com|MyDivision|Default||||||||BDO|QC|12312|QC|BDO QC|Philippines||||||Philippines|234234|website1@si.com|234234|email1@refinitiv.com|||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 210) C37786670 Third-party - PARTUPDATE
#                 - Verify error for Business Category - Invalid Industry Type pairing
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 10) BUSINESS CAT. INDUSTRY TYPE INVALID PAIRING ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID BUSINESS CATEGORY AND INDUSTRY TYPE PAIRING||||AHI|MIL|02/22/1987||11/02/1998||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 211) C37786671 Third-party - PARTUPDATE
#                 - Verify error for Invalid Date
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 11) BUSINESS CAT. INDUSTRY TYPE INVALID PAIRING ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INVALID DATE||||||22445/112/11||22435/112/11||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 212) C37786674 Third-party - PARTUPDATE
#                 - Verify error for Incomplete Bank details
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 12) INCOMPLETE BANK DETAILS ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||1|ADD - INCOMPLETE BANK DETAILS||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||QC||QC|BDO QC|Philippines||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
#
#
#
#  Scenario: 213) C37786661 Third-party - PARTUPDATE
#                 - Verify error for General Information - Invalid values
#
#    * def nowMs = call fnGetNowMs
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: SCENARIO 13) GENERAL INFO. INVALID VALUES ERROR'
#    And print '******** nowMs = '+ nowMs
#    And print '================================\n'
#    And print '\n'
#
#
##
## ADD third-party
##
#
##   * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#    * def csvRows00 = "Action Type|Third-party ID          |Reference Number|Group ID|Third-party Name        |Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party   |Division  |Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact      |Commodity Type|Bank Name  |Bank Address Line|Account No.|Bank City|Branch Name|Bank Country |Address Line|State/Province|City  |Region  |Zip/Postal Code|Country      |Phone Number|Website      |Fax|Email Address   |Description|Other Names Old Name|Other Name  |Other Name Type    |Other Name Country|Custom Fields Name         |Custom Fields Value     \n"
#
## Success: ADD thirdParty
##   * def csvRows01 = "FULLUPDATE |"+    thirdPartyId    +"|"+    nowMs   +"|1       |FULLUPDATE - "+ nowMs +"|CORP        |USD     |5K-10K           |AHI          |PRS              |02/22/1987            |10M    |11/02/2008      |SOE        |si_admin@yopmail.com|MyDivision|Default       |OTS           |DIST_M_SRC     |OTS             |MULTI        |LITTLE_VIS             |COMMODITIZED_PRODUCT|A3P           |MoneyBank  |12 Finance Avenue|12345678   |Reno     |MB Reno Br.|United States|12 Main Ave.|Ontario       |Ottawa|Americas|Z1234          |Canada       |+180011     |www.test1.com |123|test1@test.ph   |Desc abc123|                   |Acme Inc.   |Local Language Name|France            |Field1                     |FULLUPDATE TEXT         \n"
#    * def csvRows01 = "ADD|||11|Add - General Information - Invalid Value|HJHSS|4DSAS|khfdf3|jha|gasd||lll||ssssf|randomemail@test.com|Salesssss|ssssss|||||||||||||||||||Philippines|||||||||||\n"
#
#    * def csvRowsT = csvRows00 + csvRows01
#
##   * def csvRowsA = "Action Type|Third-party ID|Reference Number|Group ID|Third-party Name|Company Type|Currency|Organization Size|Industry Type|Business Category|Date of Incorporation|Revenue|Liquidation Date|Affiliation|Responsible Party|Division|Workflow Group|Spend Category|Sourcing Method|Design Agreement|Sourcing Type|Relationship Visibility|Product Impact|Commodity Type|Bank Name|Bank Address Line|Account No.|Bank City|Branch Name|Bank Country|Address Line|State/Province|City|Region|Zip/Postal Code|Country|Phone Number|Website|Fax|Email Address|Description|Other Names Old Name|Other Name|Other Name Type|Other Name Country|Custom Fields Name|Custom Fields Value\nFULLUPDATE||qwerty1|1|FULLUPDATE - "+ nowMs +"||||||||||si_admin@yopmail.com|MyDivision|Default|||||||||||||||||||Philippines|||||||||||"
#
##   * def writeToFileResult = writeToFile( "./src/test/resources/features/api/public_thirdparty/ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE.csv", csvRowsT )
#
## PAUSE to allow for server processing of file attachment
#    * pauseExecution( 1000 )
#
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice'
#    And param ProcessType = 'THIRD_PARTY_ADD_EDIT_DELETE'
##   And multipart file file = { read:'./ThirdPartyBulkUpdate/ThirdParty_Add_Update_Delete_FULLUPDATE', filename:'ThirdParty_Add_Update_Delete_FULLUPDATE.csv', contentType: 'application/vnd.ms-excel' }
#    And multipart file file = { value: '#(csvRowsT)', filename:'ThirdParty_Add_Edit_Delete_ADD.csv', contentType: 'application/vnd.ms-excel' }
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#    When method POST
#    Then status 202
#
##    Then print response
#
#    * def processId = response.data.processId
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#              {
#                "message": '##string',
#                "data":    {
#                               "processId": '##string'
#                           }
#              }
#          """
#
#
## PAUSE to allow for server processing of file attachment
##
##   * pauseExecution( 30000 )
#
#
##
## Retrieve PROCESS ID details
##
#
#    Given url postUrl = baseTestUrl
#    And path 'selfservice', processId
#    And header X-Tenant-Code = xTenantCode
#    And header RequestorEmail = requestorEmail
#    And header Authorization = 'Bearer '+ accessToken
#
#    And retry until response.data.status == 'COMPLETED'
#    When method GET
#    Then status 200
#
##    Then print response
##    Then print "RESPONSE = \n"+ response
#
#    * def status = response.data.status
#
#    And print '\n'
#    And print '================================'
#    And print '******** SELF-SERVICE THIRD-PARTY: UPLOAD FLAT FILE - THIRD_PARTY_ADD_EDIT_DELETE - ADD'
#    And print '******** nowMs          = '+ nowMs
#    And print '******** xTenantCode    = '+ xTenantCode
#    And print '******** requestorEmail = '+ requestorEmail
#    And print '******** PROCESS ID     = '+ processId
#    And print '******** STATUS         = '+ status
#    And print '================================\n'
#    And print '\n'
#
#
##
## VALIDATE response body SCHEMA
##
#    And match response ==
#          """
#            {
#              "message": "200(OK) The request was successful.",
#              "data":    {
#                             "processId":           "#string",
#                             "filename":            "#string",
#                             "meta":                {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "uploadTime":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}([.][0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2}|[+-][0-9]{4})$",
#                             "uploadDate":          "##regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
#                             "status":              "COMPLETED",
#                             "relatedFilesStatus":  null,
#                             "errors":              null,
#                             "successResponseFile": null,
#                             "errorResponseFile":   {
#                                                        "filename":  "#string",
#                                                        "fileSize":  "#number",
#                                                        "location":  "#string"
#                                                    },
#                             "numberOfRecords":     1,
#                             "recordProcessed":     0,
#                             "recordWithErrors":    1,
#                             "entityType":          "##string",
#                             "entityId":            "##string",
#                             "childReferenceId":    "##string",
#                             "triggeredBy":         "#string",
#                             "processType":         "THIRD_PARTY_ADD_EDIT_DELETE"
#                         }
#            }
#          """
